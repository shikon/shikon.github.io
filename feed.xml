<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator><link href="https://shiko.nl/feed.xml" rel="self" type="application/atom+xml" /><link href="https://shiko.nl/" rel="alternate" type="text/html" /><updated>2021-10-14T17:45:15+02:00</updated><id>https://shiko.nl/feed.xml</id><title type="html">Shiko</title><subtitle>Just one of my many random project</subtitle><author><name>Lan Hu</name></author><entry><title type="html">Creating a simple and cheap fan controller</title><link href="https://shiko.nl/programming/shibee-pcb/" rel="alternate" type="text/html" title="Creating a simple and cheap fan controller" /><published>2021-10-14T00:00:00+02:00</published><updated>2021-10-14T00:00:00+02:00</updated><id>https://shiko.nl/programming/shibee-pcb</id><content type="html" xml:base="https://shiko.nl/programming/shibee-pcb/">&lt;h1 id=&quot;a-smart-home-with-issues&quot;&gt;A smart home with issues&lt;/h1&gt;

&lt;p&gt;Recently, I had the issue where my ZigBee network would die every few days. After a lot of debugging and even re-pairing of all my devices, I came to the conclusion my ZigBee coordinator is nearing the end of its life. Strangely enough, if you restart the device it will work… for a few days. Hence, a quick and dirty fix is to restart the device every day. This is not a solution to the problem, but in case of buggy software or just hardware that is not working well can be a temporary solution.&lt;/p&gt;

&lt;h1 id=&quot;cc2531-zigbee-with-esp8266-as-wireless-coordinator&quot;&gt;CC2531 ZigBee with ESP8266 as wireless coordinator&lt;/h1&gt;

&lt;p&gt;In my case the CC2531 which is my ZigBee network coordinator is connected to an ESP8266 as a serial to wireless bridge. Because of that, I run a piece of software called ESP easy to set this up. In here we can set a rule that will restart the device every x minutes of on time as follows.&lt;/p&gt;

&lt;h2 id=&quot;enable-rules-in-esp-easy&quot;&gt;Enable rules in ESP easy&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;To enable rules, go to Tools/Advanced and check the Rules checkbox.&lt;/li&gt;
  &lt;li&gt;Save&lt;/li&gt;
  &lt;li&gt;Refresh the page&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;go-to-rules-and-insert-the-following-code&quot;&gt;Go to rules and insert the following code&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Between Devices and Notifications there will be a rules button&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Click on the rules button to go to that page&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Insert the following code&lt;/p&gt;

    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;On Uptime#MUC1_Uptime do
if [Uptime#MUC1_Uptime]&amp;gt;1440
 Reboot
endif
endon
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Save&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;???&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Profit&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;You can change 1440 to the number of minutes you want. After this amount of time the device will restart.&lt;/p&gt;

&lt;h1 id=&quot;this-is-not-the-final-solution&quot;&gt;This is not the final solution&lt;/h1&gt;

&lt;p&gt;At the moment I am designing my own ZigBee USB stick to work with Zigbee2MQTT (Z2M) or Zigbee Home Assistant (ZHA) which both can be integrated in Home Assistant. However due to chip-supply issues the newer sticks based on TI’s CC2652P are mostly out-of-stock as of this writing. Therefore, I will try to create a simple design and sell my prototypes in the Dutch market.&lt;/p&gt;</content><author><name>Lan Hu</name></author><category term="programming" /><category term="Smart Home" /><category term="ZigBee" /><summary type="html">A smart home with issues Recently, I had the issue where my ZigBee network would die every few days. After a lot of debugging and even re-pairing of all my devices, I came to the conclusion my ZigBee coordinator is nearing the end of its life. Strangely enough, if you restart the device it will work… for a few days. Hence, a quick and dirty fix is to restart the device every day. This is not a solution to the problem, but in case of buggy software or just hardware that is not working well can be a temporary solution. CC2531 ZigBee with ESP8266 as wireless coordinator In my case the CC2531 which is my ZigBee network coordinator is connected to an ESP8266 as a serial to wireless bridge. Because of that, I run a piece of software called ESP easy to set this up. In here we can set a rule that will restart the device every x minutes of on time as follows. Enable rules in ESP easy To enable rules, go to Tools/Advanced and check the Rules checkbox. Save Refresh the page Go to rules and insert the following code Between Devices and Notifications there will be a rules button Click on the rules button to go to that page Insert the following code On Uptime#MUC1_Uptime do if [Uptime#MUC1_Uptime]&amp;gt;1440 Reboot endif endon Save ??? Profit You can change 1440 to the number of minutes you want. After this amount of time the device will restart. This is not the final solution At the moment I am designing my own ZigBee USB stick to work with Zigbee2MQTT (Z2M) or Zigbee Home Assistant (ZHA) which both can be integrated in Home Assistant. However due to chip-supply issues the newer sticks based on TI’s CC2652P are mostly out-of-stock as of this writing. Therefore, I will try to create a simple design and sell my prototypes in the Dutch market.</summary></entry><entry><title type="html">Automatic restart ESP8266 with ESP easy</title><link href="https://shiko.nl/programming/espeasy-restart/" rel="alternate" type="text/html" title="Automatic restart ESP8266 with ESP easy" /><published>2021-10-06T00:00:00+02:00</published><updated>2021-10-06T00:00:00+02:00</updated><id>https://shiko.nl/programming/espeasy-restart</id><content type="html" xml:base="https://shiko.nl/programming/espeasy-restart/">&lt;h1 id=&quot;a-smart-home-with-issues&quot;&gt;A smart home with issues&lt;/h1&gt;

&lt;p&gt;Recently, I had the issue where my ZigBee network would die every few days. After a lot of debugging and even re-pairing of all my devices, I came to the conclusion my ZigBee coordinator is nearing the end of its life. Strangely enough, if you restart the device it will work… for a few days. Hence, a quick and dirty fix is to restart the device every day. This is not a solution to the problem, but in case of buggy software or just hardware that is not working well can be a temporary solution.&lt;/p&gt;

&lt;h1 id=&quot;cc2531-zigbee-with-esp8266-as-wireless-coordinator&quot;&gt;CC2531 ZigBee with ESP8266 as wireless coordinator&lt;/h1&gt;

&lt;p&gt;In my case the CC2531 which is my ZigBee network coordinator is connected to an ESP8266 as a serial to wireless bridge. Because of that, I run a piece of software called ESP easy to set this up. In here we can set a rule that will restart the device every x minutes of on time as follows.&lt;/p&gt;

&lt;h2 id=&quot;enable-rules-in-esp-easy&quot;&gt;Enable rules in ESP easy&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;To enable rules, go to Tools/Advanced and check the Rules checkbox.&lt;/li&gt;
  &lt;li&gt;Save&lt;/li&gt;
  &lt;li&gt;Refresh the page&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;go-to-rules-and-insert-the-following-code&quot;&gt;Go to rules and insert the following code&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Between Devices and Notifications there will be a rules button&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Click on the rules button to go to that page&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Insert the following code&lt;/p&gt;

    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;On Uptime#MUC1_Uptime do
if [Uptime#MUC1_Uptime]&amp;gt;1440
 Reboot
endif
endon
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Save&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;???&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Profit&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;You can change 1440 to the number of minutes you want. After this amount of time the device will restart.&lt;/p&gt;

&lt;h1 id=&quot;this-is-not-the-final-solution&quot;&gt;This is not the final solution&lt;/h1&gt;

&lt;p&gt;At the moment I am designing my own ZigBee USB stick to work with Zigbee2MQTT (Z2M) or Zigbee Home Assistant (ZHA) which both can be integrated in Home Assistant. However due to chip-supply issues the newer sticks based on TI’s CC2652P are mostly out-of-stock as of this writing. Therefore, I will try to create a simple design and sell my prototypes in the Dutch market.&lt;/p&gt;</content><author><name>Lan Hu</name></author><category term="programming" /><category term="Smart Home" /><category term="ZigBee" /><summary type="html">A smart home with issues Recently, I had the issue where my ZigBee network would die every few days. After a lot of debugging and even re-pairing of all my devices, I came to the conclusion my ZigBee coordinator is nearing the end of its life. Strangely enough, if you restart the device it will work… for a few days. Hence, a quick and dirty fix is to restart the device every day. This is not a solution to the problem, but in case of buggy software or just hardware that is not working well can be a temporary solution. CC2531 ZigBee with ESP8266 as wireless coordinator In my case the CC2531 which is my ZigBee network coordinator is connected to an ESP8266 as a serial to wireless bridge. Because of that, I run a piece of software called ESP easy to set this up. In here we can set a rule that will restart the device every x minutes of on time as follows. Enable rules in ESP easy To enable rules, go to Tools/Advanced and check the Rules checkbox. Save Refresh the page Go to rules and insert the following code Between Devices and Notifications there will be a rules button Click on the rules button to go to that page Insert the following code On Uptime#MUC1_Uptime do if [Uptime#MUC1_Uptime]&amp;gt;1440 Reboot endif endon Save ??? Profit You can change 1440 to the number of minutes you want. After this amount of time the device will restart. This is not the final solution At the moment I am designing my own ZigBee USB stick to work with Zigbee2MQTT (Z2M) or Zigbee Home Assistant (ZHA) which both can be integrated in Home Assistant. However due to chip-supply issues the newer sticks based on TI’s CC2652P are mostly out-of-stock as of this writing. Therefore, I will try to create a simple design and sell my prototypes in the Dutch market.</summary></entry><entry><title type="html">Designing a Nixie HV supply part 2</title><link href="https://shiko.nl/electronics/boost-design/" rel="alternate" type="text/html" title="Designing a Nixie HV supply part 2" /><published>2021-10-02T00:00:00+02:00</published><updated>2021-10-02T00:00:00+02:00</updated><id>https://shiko.nl/electronics/boost-design</id><content type="html" xml:base="https://shiko.nl/electronics/boost-design/">&lt;h1 id=&quot;the-160-v-nixie-power-supply-design-works&quot;&gt;The 160 V Nixie power supply design WORKS&lt;/h1&gt;

&lt;p&gt;Let’s firstly state the design you will read works without issue. The high voltage nixie power supply has been working in my nixie tube clock (this will be a post later) for about half a year. No issues, as expected from the efficiency and the negligible heating of the components. I have to admit, it rarely happens that a design works on the first try without some modifications…&lt;/p&gt;

&lt;h1 id=&quot;the-nixie-tube-power-supply-has-an-energy-efficiency-of-87&quot;&gt;The Nixie tube power supply has an energy efficiency of 87%&lt;/h1&gt;

&lt;p&gt;High efficiency is important because a low efficiency implies that the circuit will become hot. Luckily this is not the case due to the good efficiency of 87% at 12 V input. And only ~13% of the energy put into the circuit is turned into heat. 
I loaded the circuit with various resistors at a 12 V input, the results are summarized in the table below. With V for voltage, I for current, P for Power, and Eff for efficiency.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;V_in&lt;/th&gt;
      &lt;th&gt;I_in&lt;/th&gt;
      &lt;th&gt;P_in&lt;/th&gt;
      &lt;th&gt;V_out&lt;/th&gt;
      &lt;th&gt;I_out&lt;/th&gt;
      &lt;th&gt;P_out&lt;/th&gt;
      &lt;th&gt;\(\eta\)&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;11.94&lt;/td&gt;
      &lt;td&gt;0.09&lt;/td&gt;
      &lt;td&gt;1.05&lt;/td&gt;
      &lt;td&gt;158.917&lt;/td&gt;
      &lt;td&gt;0.005&lt;/td&gt;
      &lt;td&gt;0.87&lt;/td&gt;
      &lt;td&gt;83.4%&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;11.89&lt;/td&gt;
      &lt;td&gt;0.17&lt;/td&gt;
      &lt;td&gt;1.98&lt;/td&gt;
      &lt;td&gt;158.817&lt;/td&gt;
      &lt;td&gt;0.011&lt;/td&gt;
      &lt;td&gt;1.69&lt;/td&gt;
      &lt;td&gt;84.9%&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;11.83&lt;/td&gt;
      &lt;td&gt;0.25&lt;/td&gt;
      &lt;td&gt;2.96&lt;/td&gt;
      &lt;td&gt;158.917&lt;/td&gt;
      &lt;td&gt;0.016&lt;/td&gt;
      &lt;td&gt;2.56&lt;/td&gt;
      &lt;td&gt;86.5%&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;11.77&lt;/td&gt;
      &lt;td&gt;0.33&lt;/td&gt;
      &lt;td&gt;3.91&lt;/td&gt;
      &lt;td&gt;158.917&lt;/td&gt;
      &lt;td&gt;0.021&lt;/td&gt;
      &lt;td&gt;3.37&lt;/td&gt;
      &lt;td&gt;86.1%&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;11.70&lt;/td&gt;
      &lt;td&gt;0.44&lt;/td&gt;
      &lt;td&gt;5.10&lt;/td&gt;
      &lt;td&gt;147.17&lt;/td&gt;
      &lt;td&gt;0.030&lt;/td&gt;
      &lt;td&gt;4.38&lt;/td&gt;
      &lt;td&gt;85.8%&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;The wires used to power the circuit had a non-negligible resistance, therefore &lt;a href=&quot;https://en.wikipedia.org/wiki/Four-terminal_sensing&quot;&gt;Kelvin probes&lt;/a&gt; were used to determine the potential at the input of the circuit. The maximum output power is around 4 W, which should be able to power 10 bulbs of IN-14. In the last row, at 4.4 W output power, the voltage is lower than the nominal value of 158.9 V.&lt;/p&gt;

&lt;h1 id=&quot;the-output-power-is-limited-by-the-inductor&quot;&gt;The output power is limited by the inductor&lt;/h1&gt;

&lt;p&gt;As mentioned in &lt;a href=&quot;https://shiko.nl/electronics/a-pcb-design/&quot;&gt;part 1&lt;/a&gt;, the voltage over the inductor is proportional to the inductance and change in current. For higher output power the change in current is larger and this has to be countered with a larger inductance. Unfortunately, by increasing the current through an inductor the inductance actually decreases! This is because the magnetic domains inside the magnetic core of an inductor align with the magnetic field. This was not unexpected as the main two parameters of an inductor, are the inductance and the saturation current. The saturation current was 2 A and is the value where the inductance is greatly reduced from its nominal value.&lt;/p&gt;

&lt;h1 id=&quot;what-do-i-want&quot;&gt;What do I want?&lt;/h1&gt;

&lt;p&gt;I need a high voltage supply for my nixie tubes.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Output voltage of 160 V&lt;/li&gt;
  &lt;li&gt;Output current of at least 12 mA (6x IN-14)&lt;/li&gt;
  &lt;li&gt;Not noisy&lt;/li&gt;
  &lt;li&gt;Does not blow itself up&lt;/li&gt;
  &lt;li&gt;Efficiency &amp;gt; 80%&lt;/li&gt;
  &lt;li&gt;Voltage ripple &amp;lt;1%&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As shown in the basic schematic in part 1, the core components are the inductor, switch (MOSFET), diode and capacitor.&lt;/p&gt;

&lt;h1 id=&quot;inductor-choice&quot;&gt;Inductor choice&lt;/h1&gt;

&lt;p&gt;So how did I choose my inductor, well I looked at which kind of inductors were typically available and this results in an inductor of 100 \muH with a saturation current of 2 A. Trying to buy ones with a larger inductance is either very expensive, physically large, or has a low supply. 
Now we have to make sure the peak current is below that of the saturation current. The peak current is mainly decided by 2 terms, one which is the output current and the other term is due to the inductor.&lt;/p&gt;

&lt;p&gt;\(I_{peak} = I_{in} +\frac{V_{in}D}{2Lf}= 0.25 + \frac{12\cdot0.85}{2\cdot100\cdot10^{-3}} \approx 0.5\) A&lt;/p&gt;

&lt;p&gt;The input current ($I_{in} = \frac{P_{out}}{\eta V_{in}}$) can be a rough estimate with your target efficiency. Furthermore, choosing an oversized inductor also prevents going into CCM mode. The design of a CCM mode boost converter is difficult here. Because it requires you to have a minimum load, which is not always the case. The bulbs could be turned off or have PWM dimming, which in CCM is hard to achieve due to the low (temporary) load.&lt;/p&gt;

&lt;h2 id=&quot;inductor-power-loss&quot;&gt;Inductor power loss&lt;/h2&gt;

&lt;p&gt;An inductor is just a long strand of wire, hence it has a resistance $R_L$ and thus DC power losses. Also changing the magnetic field in the core material can lead to AC losses. These are,
\(P_{L,DC} = I_{in}^2 R_L,\)&lt;/p&gt;

\[P_{L,AC} = I_{ripple}^2k_1\sqrt{f},\]

&lt;p&gt;with $k_1$ a coupling coefficient from the &lt;a href=&quot;https://www.coilcraft.com/en-us/models/spice/?seriesName=MSS1278&quot;&gt;datasheet&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/shikon/cloudimg/master/typora/image-20211005175727731.png&quot; alt=&quot;image-20211005175727731&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I ignore R1 because the switching happens at 220 kHz and due to the series capacitance in the branch of R1 very little current flows. The impedance of the capacitor is ~$67:k\Omega $, while the inductor is ~$138:\Omega$.&lt;/p&gt;

&lt;h1 id=&quot;mosfet-switch-choice&quot;&gt;MOSFET switch choice&lt;/h1&gt;

&lt;p&gt;In order for a boost converter to work, the circuit needs to be in two states. One which easily conducts current and one which hardly conducts any current, this behavior can be achieved using a switch. The choice of MOSFET is important as an ill choice would lead to large energy losses and this leads to low efficiency. The 3 main loss mechanisms are conduction, switching, and gate charging.&lt;/p&gt;

&lt;h2 id=&quot;conduction-losses&quot;&gt;Conduction losses&lt;/h2&gt;

&lt;p&gt;The beauty of semiconductors is that these materials can change from very resistive to almost no resistance -metal-like material- (this is why they can act as switches). Since the resistance is not zero, there are resistive losses which go as,
\(P_c=R_{DS,on}I_{peak}^2D,\)
with \(R_{DS,on}\) the resistance when the switch is “on” and \(D\) the duty cycle.&lt;/p&gt;

&lt;h2 id=&quot;switching-losses&quot;&gt;Switching losses&lt;/h2&gt;

&lt;p&gt;During the switching, the current needs to fall or rise. Effectively this means the energy required for changing the current is lost. 
\(P_{switch}=\frac{1}{2}(V_{out}+V_f)I_{peak}(t_{rise}+t_{fall})f,\)
with \(V_f\) the diode forward voltage.&lt;/p&gt;

&lt;h2 id=&quot;gate-charge-losses&quot;&gt;Gate charge losses&lt;/h2&gt;

&lt;p&gt;In order for a MOSFET to conduct, charges are collected on the gate ($Q_{gate}$) to create an electric field. The charges on the gate can be assumed to be lost after discharging it to close the gate again. The power lost through the gate ($P_{gate}$) is,
\(P_{gate}=Q_{gate}V_{in}f.\)
All these losses, typically scale with the size of the MOSFET, so we would like to use a very small MOSFET. Unfortunately, this is not possible because we would like the MOSFET to be resistant to a large difference between the source and drain. Because of the large output voltage, we would need a large MOSFET. It is worth noting that bigger MOSFETs are more expensive. This led me to use a &lt;a href=&quot;https://ieeexplore.ieee.org/document/4463866&quot;&gt;voltage multiplier cell&lt;/a&gt; which would let me use the smaller brother of the Infineon IRFH5025, the Infineon IRFH5215.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Model&lt;/th&gt;
      &lt;th&gt;$V_{DS,max}$ (V)&lt;/th&gt;
      &lt;th&gt;$Q_{gate}$ (nC)&lt;/th&gt;
      &lt;th&gt;$R_{DS,on}$ (m$\Omega$)&lt;/th&gt;
      &lt;th&gt;$t_{rise}$ (ns)&lt;/th&gt;
      &lt;th&gt;$t_{fall}$ (ns)&lt;/th&gt;
      &lt;th&gt;$t_{total}$ (ns)&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;AP15T15GH-HF&lt;/td&gt;
      &lt;td&gt;150&lt;/td&gt;
      &lt;td&gt;24&lt;/td&gt;
      &lt;td&gt;150&lt;/td&gt;
      &lt;td&gt;12&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;16&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;IRF7853&lt;/td&gt;
      &lt;td&gt;100&lt;/td&gt;
      &lt;td&gt;28&lt;/td&gt;
      &lt;td&gt;15&lt;/td&gt;
      &lt;td&gt;6.6&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;12.6&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;IRFH5025&lt;/td&gt;
      &lt;td&gt;250&lt;/td&gt;
      &lt;td&gt;37&lt;/td&gt;
      &lt;td&gt;84&lt;/td&gt;
      &lt;td&gt;6.3&lt;/td&gt;
      &lt;td&gt;6.1&lt;/td&gt;
      &lt;td&gt;12.4&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;IRFH5215&lt;/td&gt;
      &lt;td&gt;150&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;58&lt;/td&gt;
      &lt;td&gt;6.3&lt;/td&gt;
      &lt;td&gt;2.9&lt;/td&gt;
      &lt;td&gt;9.2&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Which in all the listed specs is superior except the maximum voltage between source and drain. The IRFH5215 -is also half the price of IRFH5025- priced at €0.96 (MQTY. 4000). It should be noted the maximum drain current can be a limiting factor, however for power MOSFETs as these, this is generally not a problem and is much higher than the inductor saturation current.&lt;/p&gt;

&lt;h1 id=&quot;diode&quot;&gt;Diode&lt;/h1&gt;

&lt;p&gt;The diode is there to prevent the capacitor from discharging. However, each time current passes the diode there are two losses: forward voltage drop power loss and switching losses again.&lt;/p&gt;

&lt;h2 id=&quot;diode-resistance&quot;&gt;“Diode resistance”&lt;/h2&gt;

&lt;p&gt;Because the voltage is decreased after a diode, there is a power loss ($P_{f}$) attributed to this as current is passing. This current is roughly, on average $I_{avg} = P_{out}/V_{in}$.
\(P_f = (1-D)V_fI_{avg},\)
with $V_f$ the forward voltage drop of the diode. In order to improve the efficiency of my design, I could change the design to a synchronous boost controller, which means replacing the diodes with a MOSFET as the voltage drop along the channel is much smaller than a diode. However, this adds a lot of complexity and cost, as a MOSFET is more expensive and needs to be driven. Also, the impact of this voltage drop is low  because of the large boost ratio ($V_{out}/V_{in}$) and large output voltage.&lt;/p&gt;

&lt;h2 id=&quot;switching-losses-in-diodes&quot;&gt;Switching losses in diodes&lt;/h2&gt;

&lt;p&gt;The switching loss in diodes is due to the &lt;a href=&quot;https://www.google.com/url?sa=t&amp;amp;rct=j&amp;amp;q=&amp;amp;esrc=s&amp;amp;source=web&amp;amp;cd=&amp;amp;ved=2ahUKEwj3jtDe1LPzAhXRRUEAHZdhAAQQFnoECAQQAQ&amp;amp;url=https%3A%2F%2Fwww.mikrocontroller.net%2Fattachment%2F351267%2FUnderstanding-Diode-Reverse-Recovery-and-Its-Effect-on-Switching-Losses.pdf&amp;amp;usg=AOvVaw3Tg-MktM4UHxicrI5Hh0B6&quot;&gt;reverse recovery current&lt;/a&gt;. My simulation shows that this only contributes very little to the overall power loss. Please read the link for a full discussion.&lt;/p&gt;

&lt;h1 id=&quot;discussion-on-voltage-ripple&quot;&gt;Discussion on voltage ripple&lt;/h1&gt;

&lt;p&gt;In some applications, such as in ADC and DAC the voltage reference should be as noise free as possible. It is then important to have a low voltage ripple as you try to keep your error as small as possible. However, in nixie tubes this is not really an issue as they can be (in principle) driven by your AC wall output. Nevertheless, you would like the apparent brightness not to change too much so I arbitrarily chose the ripple to be within 1%. An easy fix would be to oversize de the inductor which I did, or to increase the output capacitor. In the latter case, it acts as a battery and since it will be able to store more energy the drop in voltage would be less if more energy is stored and the same amount is taken out every time.&lt;/p&gt;

&lt;h1 id=&quot;total-power-loss&quot;&gt;Total power loss&lt;/h1&gt;

&lt;p&gt;The efficiency ($\eta$) is just $P_{out}/P_{in}$. In other words,
\(\eta = \frac{P_{in} - P_{loss}}{P_{in}},\)
with,
\(P_{loss}=P_{L,DC}+P_{L,AC}+P_c+P_{switch}+P_{gate}+P_f.\)
The expected efficiency of my design was 89%, which is a bit higher than the measured one. The 2% difference can already be explained if I have ~$100 :m\Omega$ of track resistance, which is plausible. Furthermore, it could be that some of the numbers that I used were slightly off or some other loss mechanisms were not included. At this point, I am not too worried as all the criteria have been met. It could be optimized by diving even deeper, but my nixie clock is working now correctly. How I am controlling the nixie clock, will be part 3 of this adventure…&lt;/p&gt;</content><author><name>Lan Hu</name></author><category term="electronics" /><category term="PCB" /><category term="design" /><summary type="html">The 160 V Nixie power supply design WORKS Let’s firstly state the design you will read works without issue. The high voltage nixie power supply has been working in my nixie tube clock (this will be a post later) for about half a year. No issues, as expected from the efficiency and the negligible heating of the components. I have to admit, it rarely happens that a design works on the first try without some modifications… The Nixie tube power supply has an energy efficiency of 87% High efficiency is important because a low efficiency implies that the circuit will become hot. Luckily this is not the case due to the good efficiency of 87% at 12 V input. And only ~13% of the energy put into the circuit is turned into heat. I loaded the circuit with various resistors at a 12 V input, the results are summarized in the table below. With V for voltage, I for current, P for Power, and Eff for efficiency. V_in I_in P_in V_out I_out P_out \(\eta\) 11.94 0.09 1.05 158.917 0.005 0.87 83.4% 11.89 0.17 1.98 158.817 0.011 1.69 84.9% 11.83 0.25 2.96 158.917 0.016 2.56 86.5% 11.77 0.33 3.91 158.917 0.021 3.37 86.1% 11.70 0.44 5.10 147.17 0.030 4.38 85.8% The wires used to power the circuit had a non-negligible resistance, therefore Kelvin probes were used to determine the potential at the input of the circuit. The maximum output power is around 4 W, which should be able to power 10 bulbs of IN-14. In the last row, at 4.4 W output power, the voltage is lower than the nominal value of 158.9 V. The output power is limited by the inductor As mentioned in part 1, the voltage over the inductor is proportional to the inductance and change in current. For higher output power the change in current is larger and this has to be countered with a larger inductance. Unfortunately, by increasing the current through an inductor the inductance actually decreases! This is because the magnetic domains inside the magnetic core of an inductor align with the magnetic field. This was not unexpected as the main two parameters of an inductor, are the inductance and the saturation current. The saturation current was 2 A and is the value where the inductance is greatly reduced from its nominal value. What do I want? I need a high voltage supply for my nixie tubes. Output voltage of 160 V Output current of at least 12 mA (6x IN-14) Not noisy Does not blow itself up Efficiency &amp;gt; 80% Voltage ripple &amp;lt;1% As shown in the basic schematic in part 1, the core components are the inductor, switch (MOSFET), diode and capacitor. Inductor choice So how did I choose my inductor, well I looked at which kind of inductors were typically available and this results in an inductor of 100 \muH with a saturation current of 2 A. Trying to buy ones with a larger inductance is either very expensive, physically large, or has a low supply. Now we have to make sure the peak current is below that of the saturation current. The peak current is mainly decided by 2 terms, one which is the output current and the other term is due to the inductor. \(I_{peak} = I_{in} +\frac{V_{in}D}{2Lf}= 0.25 + \frac{12\cdot0.85}{2\cdot100\cdot10^{-3}} \approx 0.5\) A The input current ($I_{in} = \frac{P_{out}}{\eta V_{in}}$) can be a rough estimate with your target efficiency. Furthermore, choosing an oversized inductor also prevents going into CCM mode. The design of a CCM mode boost converter is difficult here. Because it requires you to have a minimum load, which is not always the case. The bulbs could be turned off or have PWM dimming, which in CCM is hard to achieve due to the low (temporary) load. Inductor power loss An inductor is just a long strand of wire, hence it has a resistance $R_L$ and thus DC power losses. Also changing the magnetic field in the core material can lead to AC losses. These are, \(P_{L,DC} = I_{in}^2 R_L,\) \[P_{L,AC} = I_{ripple}^2k_1\sqrt{f},\] with $k_1$ a coupling coefficient from the datasheet: I ignore R1 because the switching happens at 220 kHz and due to the series capacitance in the branch of R1 very little current flows. The impedance of the capacitor is ~$67:k\Omega $, while the inductor is ~$138:\Omega$. MOSFET switch choice In order for a boost converter to work, the circuit needs to be in two states. One which easily conducts current and one which hardly conducts any current, this behavior can be achieved using a switch. The choice of MOSFET is important as an ill choice would lead to large energy losses and this leads to low efficiency. The 3 main loss mechanisms are conduction, switching, and gate charging. Conduction losses The beauty of semiconductors is that these materials can change from very resistive to almost no resistance -metal-like material- (this is why they can act as switches). Since the resistance is not zero, there are resistive losses which go as, \(P_c=R_{DS,on}I_{peak}^2D,\) with \(R_{DS,on}\) the resistance when the switch is “on” and \(D\) the duty cycle. Switching losses During the switching, the current needs to fall or rise. Effectively this means the energy required for changing the current is lost. \(P_{switch}=\frac{1}{2}(V_{out}+V_f)I_{peak}(t_{rise}+t_{fall})f,\) with \(V_f\) the diode forward voltage. Gate charge losses In order for a MOSFET to conduct, charges are collected on the gate ($Q_{gate}$) to create an electric field. The charges on the gate can be assumed to be lost after discharging it to close the gate again. The power lost through the gate ($P_{gate}$) is, \(P_{gate}=Q_{gate}V_{in}f.\) All these losses, typically scale with the size of the MOSFET, so we would like to use a very small MOSFET. Unfortunately, this is not possible because we would like the MOSFET to be resistant to a large difference between the source and drain. Because of the large output voltage, we would need a large MOSFET. It is worth noting that bigger MOSFETs are more expensive. This led me to use a voltage multiplier cell which would let me use the smaller brother of the Infineon IRFH5025, the Infineon IRFH5215. Model $V_{DS,max}$ (V) $Q_{gate}$ (nC) $R_{DS,on}$ (m$\Omega$) $t_{rise}$ (ns) $t_{fall}$ (ns) $t_{total}$ (ns) AP15T15GH-HF 150 24 150 12 4 16 IRF7853 100 28 15 6.6 6 12.6 IRFH5025 250 37 84 6.3 6.1 12.4 IRFH5215 150 21 58 6.3 2.9 9.2 Which in all the listed specs is superior except the maximum voltage between source and drain. The IRFH5215 -is also half the price of IRFH5025- priced at €0.96 (MQTY. 4000). It should be noted the maximum drain current can be a limiting factor, however for power MOSFETs as these, this is generally not a problem and is much higher than the inductor saturation current. Diode The diode is there to prevent the capacitor from discharging. However, each time current passes the diode there are two losses: forward voltage drop power loss and switching losses again. “Diode resistance” Because the voltage is decreased after a diode, there is a power loss ($P_{f}$) attributed to this as current is passing. This current is roughly, on average $I_{avg} = P_{out}/V_{in}$. \(P_f = (1-D)V_fI_{avg},\) with $V_f$ the forward voltage drop of the diode. In order to improve the efficiency of my design, I could change the design to a synchronous boost controller, which means replacing the diodes with a MOSFET as the voltage drop along the channel is much smaller than a diode. However, this adds a lot of complexity and cost, as a MOSFET is more expensive and needs to be driven. Also, the impact of this voltage drop is low because of the large boost ratio ($V_{out}/V_{in}$) and large output voltage. Switching losses in diodes The switching loss in diodes is due to the reverse recovery current. My simulation shows that this only contributes very little to the overall power loss. Please read the link for a full discussion. Discussion on voltage ripple In some applications, such as in ADC and DAC the voltage reference should be as noise free as possible. It is then important to have a low voltage ripple as you try to keep your error as small as possible. However, in nixie tubes this is not really an issue as they can be (in principle) driven by your AC wall output. Nevertheless, you would like the apparent brightness not to change too much so I arbitrarily chose the ripple to be within 1%. An easy fix would be to oversize de the inductor which I did, or to increase the output capacitor. In the latter case, it acts as a battery and since it will be able to store more energy the drop in voltage would be less if more energy is stored and the same amount is taken out every time. Total power loss The efficiency ($\eta$) is just $P_{out}/P_{in}$. In other words, \(\eta = \frac{P_{in} - P_{loss}}{P_{in}},\) with, \(P_{loss}=P_{L,DC}+P_{L,AC}+P_c+P_{switch}+P_{gate}+P_f.\) The expected efficiency of my design was 89%, which is a bit higher than the measured one. The 2% difference can already be explained if I have ~$100 :m\Omega$ of track resistance, which is plausible. Furthermore, it could be that some of the numbers that I used were slightly off or some other loss mechanisms were not included. At this point, I am not too worried as all the criteria have been met. It could be optimized by diving even deeper, but my nixie clock is working now correctly. How I am controlling the nixie clock, will be part 3 of this adventure…</summary></entry><entry><title type="html">Creating a simple and cheap fan controller</title><link href="https://shiko.nl/electronics/pwm-fan-controller/" rel="alternate" type="text/html" title="Creating a simple and cheap fan controller" /><published>2021-08-27T00:00:00+02:00</published><updated>2021-08-27T00:00:00+02:00</updated><id>https://shiko.nl/electronics/pwm-fan-controller</id><content type="html" xml:base="https://shiko.nl/electronics/pwm-fan-controller/">&lt;h1 id=&quot;from-the-need-to-the-idea-to-the-solution&quot;&gt;From the need to the idea to the solution&lt;/h1&gt;

&lt;p&gt;After upgrading my computer with the new Ryzen 5800x series, the new motherboard did not include a header to connect my water temperature sensor. This lead the control of my fans to be limited to the temperature sensor inside the processor. This would be okay if I used regular processor cooling, which has a small thermal mass and has good thermal conductivity. However, in my case, I have a water cooling where the temperature of the radiator depends on the water temperature and not so much on the current processor temperature. There is a huge delay in the order of minutes before the water heats up due to the large thermal mass it presents. Therefore the control that acts on the same timescale as workload increases (seconds) is an ill fit. Therefore I used the water temperature, which was read out on the previous motherboard. Unfortunately, the motherboard that I got on sale did not have this. 
Fortunately, fans can easily be controlled by PWM hence this article will guide you to create a very simple and cheap PWM fan controller. But first what is PWM?&lt;/p&gt;

&lt;h1 id=&quot;pulse-width-modulation-pwm-for-fans&quot;&gt;Pulse-Width Modulation (PWM) for fans&lt;/h1&gt;

&lt;p&gt;To control the fans the motherboard sends out signals that determine the speed fans should run at. The main reason to reduce the fan speed is to reduce the noise it makes. The lower speed is okay as, under a low processor load, the amount of heat that should be dissipated is low.
PWM is a signal and a way of communication that tells the fan at what speed it should run. It is a digital signal and has a high (on) and low (off) level as shown here.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/shikon/cloudimg/master/typora/4j9UsPWYo5hWc5Y_U_FWimTo1gUOLgLpfqF3OEmYQeDe3wfz6i_qOSvNcTggeu2RuCE46kZcDA&quot; alt=&quot;Taken from Bvsystems.be&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The frequency (f) of the PWM signal depends on the total time ($T_{on}+T_{off}$),
\(f = \frac{1}{T_{on}+T_{off}}.\)
 The speed of the fan in percentage depends directly on the duty cycle (DT) in percentage,
\(\mathrm{DT}=\frac{T_{on}}{T_{on}+T_{off}}.\)
so if DT is 0.6 or 60% the speed of the fan will be 60% of its maximum speed.&lt;/p&gt;

&lt;h1 id=&quot;the-temperature-of-a-thermistor&quot;&gt;The temperature of a thermistor&lt;/h1&gt;

&lt;p&gt;Okay, we know how to create the signal but how do we know what speed the fans should run at. Depending on the amount of noise you allow at a certain water temperature, the water temperature is key. To find this out we need to translate the resistance of a thermistor back to a temperature. Typically these have a negative temperature coefficient, meaning the resistance decreases as the temperature increases. Since I do not know the model or make of my thermistor, I hoped a commonly used model would be a good fit. The temperature ($T$) as function of the resistance ($R_T$) according to the Steinhart-Hart equation. 
\(\frac{1}{T}=C_1+C_2\ln{R_T}+C_3(\ln{R_T})^3\)
The other option was the &lt;a href=&quot;https://en.wikipedia.org/wiki/Thermistor#B_or_%CE%B2_parameter_equation&quot;&gt;$\beta-$equation&lt;/a&gt; which is an exponential relationship and can be extended to the Steinhart-Hart equation.&lt;/p&gt;

&lt;h1 id=&quot;requirements-for-the-pwm-fan-controller&quot;&gt;Requirements for the PWM fan controller&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;The PWM frequency of computer fans is typically 25 kHz but please check the datasheet.&lt;/li&gt;
  &lt;li&gt;Read temperature from a thermistor&lt;/li&gt;
  &lt;li&gt;The speed range for my fans was 30-100%&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;tackling-each-problem-1-by-1&quot;&gt;Tackling each problem 1-by-1&lt;/h1&gt;

&lt;p&gt;I separated the core functionalities of the fan controller into 3 parts.&lt;/p&gt;

&lt;h2 id=&quot;1-microprocessor-choice-and-coding-a-pwm-signal&quot;&gt;1) Microprocessor choice and coding a PWM signal&lt;/h2&gt;

&lt;p&gt;At the beginning of this year, I programmed a variable duty cycle on an Arduino nano. Achieving a PWM frequency of 1 MHz is not possible with the built-in PWM functionality and neither is it variable at the resolution that I wanted (8-bit). To do this I went down one level and set the registers of the timers. However, my experience learnt me this took quite some development time. Therefore, this time I opted to use a different microcontroller where I could just use higher-level functions and generate the PWM signal according to my needs as simple as a few lines of code. I found an STM32F103C8T6 (STM32 black pill) lying around in my closet and found &lt;a href=&quot;https://github.com/stm32duino/wiki/wiki/HardwareTimer-library&quot;&gt;this library&lt;/a&gt; that had everything I needed.&lt;/p&gt;

&lt;h2 id=&quot;2-temperature-readout-by-voltage-divider&quot;&gt;2) Temperature readout by voltage divider&lt;/h2&gt;

&lt;p&gt;Just like in one of my &lt;a href=&quot;https://shiko.nl/electronics/a-pcb-design/#working-principle-of-smps&quot;&gt;past articles&lt;/a&gt; I used a voltage divider to find the thermistor resistance. Putting $R_T$ at the position of $R_2$, it can be found from the output voltage as,
\(R_T = \frac{R_1}{V_{out}}\)
With $R_1$ a chosen resistance in my case 4.7 k$\Omega$. Since the thermistor model is a linearization that is accurate in a certain range, I chose $R_1$  such that it is similar to $R_T$ during computer idle.&lt;/p&gt;

&lt;p&gt;To find the coefficients, you would take measurements of $R_T$ at for example three different temperatures. Since my sensor was already mounted in the system and it doesn’t have to be very accurate I took a &lt;a href=&quot;https://www.google.com/url?sa=t&amp;amp;rct=j&amp;amp;q=&amp;amp;esrc=s&amp;amp;source=web&amp;amp;cd=&amp;amp;ved=2ahUKEwi6qprQsNHyAhUFmFwKHeLEAGgQFnoECB8QAQ&amp;amp;url=http%3A%2F%2Fwww.bapihvac.com%2Fwp-content%2Fuploads%2F2010%2F11%2FThermistor_10K-2.pdf&amp;amp;usg=AOvVaw0w8p8u6Bg9c-7rXmQ3OiK7&quot;&gt;random&lt;/a&gt; measurement found on the internet for the same kind of thermistor that I had which is a 10 k$\Omega$-thermistor. Plugged 3-points into &lt;a href=&quot;https://www.thinksrs.com/downloads/programs/therm%20calc/ntccalibrator/ntccalculator.html&quot;&gt;this&lt;/a&gt; tool for 25, 50, and 70 $^\circ$ C, which is the range I expect the water to be in and thus the sensor to be exposed to.&lt;/p&gt;

&lt;h2 id=&quot;3-defining-different-speed-ramp-up-ranged-depending-on-temperature&quot;&gt;3) Defining different speed ramp up ranged depending on temperature&lt;/h2&gt;

&lt;p&gt;To create a silent system, you want initially the fan speed to be low at low temperatures and high at high temperatures. But what is low and what is high? Since my fans can not be run below 30%, this was the lower limit (this is not exactly true but I will discuss this later). For heat transfer to occur via convection, there needs to be a temperature difference between the radiator (I assume it is equal to the water temperature) and the environment. My room is typically below  30$^\circ$C therefore up to let say a water temperature of 40$^\circ$C the fans run in the lowest setting and then they should gradually increase. This is split into 2 different ramps in my code which reduces the fan noise. Whenever a lot of heat is dumped into the water, the fans will still go to 100%. This point was chosen to be 70$^\circ$C, because the tubes start to melt at 74$^\circ$C according to the manufacturer. **Be careful that water will slowly evaporate even below its boiling point of 100 $^\circ$C. **&lt;/p&gt;

&lt;h2 id=&quot;extra-true-0-pwm&quot;&gt;Extra) true 0% PWM&lt;/h2&gt;

&lt;p&gt;Sometimes you might want to go lower than 30% or even turn it off to save power but also to prevent noise. I did not do this as this extra step, requires a lot of effort for very little gain in my case. However, should you want this. The fans can be turned off by setting the PWM duty-cycle to 0%, however most fans don’t support this. In the case when water temperature is already below what you like, in my code 40$^\circ$C. You could switch off a MOSFET thus set the gate voltage to low or 0 V and when it s above  40$^\circ$C you would turn it on. The MOSFET should then connect between your black wire (anode) from your fan and the anode of your power supply. In the situation the fans should be off, the electronic circuit is broken by the switch and no current will be able to flow.&lt;/p&gt;

&lt;h1 id=&quot;connections&quot;&gt;Connections&lt;/h1&gt;

&lt;p&gt;Since the connection diagram is quite simple I do it in words. The thermistor has 2 pins (there is no polarity) and should be connected as in the voltage divider, 1 to ground and 1 to $R_1$.  Finally, the PWM signal is output at pin PA8 and this should go to the PWM pin as follows,&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/shikon/cloudimg/master/typora/02-1.jpg&quot; alt=&quot;From ekwb.com&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Lastly, power for the microcontroller can be supplied over the micro-USB.&lt;/p&gt;

&lt;h1 id=&quot;the-final-code&quot;&gt;The final code&lt;/h1&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#include &amp;lt;Arduino.h&amp;gt;
#define inLED PB12
#define PWMpin PA8
#define SERIAL_PORT Serial1
#define f_PWM 25000
#define PWMstatic 30
#define SAMPLES 100

HardwareSerial Serial1(PA_10, PA_9);
//Thermistor const
#define T_waterpin PA7
int Vo;
float Rchosen = 4582;
float logR2, R2, T;
float c1 = 1.133027435e-03, c2 = 2.334426745e-04, c3 = 0.9074747924e-07;

//code variables
float Ttest;
int PWMdynamic = 0, PWMold= 0;
int  i, Vs;
bool paused = 0;

//init specifics of the hardware timer and which effectively pin
TIM_TypeDef *Instance = (TIM_TypeDef *)pinmap_peripheral(digitalPinToPinName(PWMpin), PinMap_PWM);
uint32_t channel = STM_PIN_CHANNEL(pinmap_function(digitalPinToPinName(PWMpin), PinMap_PWM));
//Timer object init with previous intel
HardwareTimer *MyTim = new HardwareTimer(Instance);   // no need to configure pin, it will be done by HardwareTimer configuration

float reading_to_temp(int number, int R1){
  int temp;
  R2 = R1 / (1023.0 / (float)number - 1.0);
  logR2 = log(R2);
  temp = (1.0 / (c1 + c2*logR2 + c3*logR2*logR2*logR2));
  temp = temp - 273.15;
  return temp;
}

void setup() {
  pinMode(inLED, OUTPUT);
  digitalWrite(inLED, LOW);
  MyTim-&amp;gt;setPWM(channel, PWMpin, f_PWM, PWMstatic);            // 5 Hertz, 10% dutycycle
}

void loop() {
  //improve averaging of analogread by oversampling because required speed is only ~ Hz.
  Vs = 0;
  for(i = 0; i &amp;lt; SAMPLES; i++){
    Vs = Vs + analogRead(T_waterpin);
  }
  Vo = Vs / SAMPLES;
  T = reading_to_temp(Vo, Rchosen);
  Ttest = T;
  if(Ttest &amp;lt;=40){
    PWMdynamic = 30;
    //MyTim-&amp;gt;pause();
    paused = 1;
  }
  else if(paused){
    paused = 0;
    //MyTim-&amp;gt;resume();
  }
  if(Ttest &amp;gt; 40 &amp;amp;&amp;amp; Ttest &amp;lt;= 60){
    PWMdynamic = 30 + 25 * (Ttest - 40) / 20;
  }
  else if(Ttest &amp;gt; 60 &amp;amp;&amp;amp; Ttest &amp;lt;= 70){
    PWMdynamic = 55 + 45 * (Ttest - 60) / 10;
  }
  else if(Ttest &amp;gt; 70){
    PWMdynamic = 100;
  }
  //hysteresis to keep number of updates small and prevent oscillatory behaviour.
  if( abs(PWMdynamic - PWMold) &amp;gt; 3){
    MyTim-&amp;gt;setCaptureCompare(channel, PWMdynamic, PERCENT_COMPARE_FORMAT);
    PWMold = PWMdynamic;
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;final-cost&quot;&gt;Final cost&lt;/h1&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Component&lt;/th&gt;
      &lt;th&gt;Cost ($\euro$)&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Resistor 4k7&lt;/td&gt;
      &lt;td&gt;0.01/free&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Black pill (STM32F1)&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://www.aliexpress.com/item/1005003127544969.html?spm=a2g0o.productlist.0.0.4c7e206063NLMD&amp;amp;algo_pvid=0c396bde-c6ff-4e7c-a00f-647e6da82627&amp;amp;algo_exp_id=0c396bde-c6ff-4e7c-a00f-647e6da82627-0&quot;&gt;3.63&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Any other STM32 series MCU would work as long as it is supported by the library. It seems my version of black pill is end of life, the new version would work also. Please be careful for the pin assignment, which could be different.&lt;/p&gt;</content><author><name>Lan Hu</name></author><category term="electronics" /><category term="PCB" /><category term="design" /><summary type="html">From the need to the idea to the solution After upgrading my computer with the new Ryzen 5800x series, the new motherboard did not include a header to connect my water temperature sensor. This lead the control of my fans to be limited to the temperature sensor inside the processor. This would be okay if I used regular processor cooling, which has a small thermal mass and has good thermal conductivity. However, in my case, I have a water cooling where the temperature of the radiator depends on the water temperature and not so much on the current processor temperature. There is a huge delay in the order of minutes before the water heats up due to the large thermal mass it presents. Therefore the control that acts on the same timescale as workload increases (seconds) is an ill fit. Therefore I used the water temperature, which was read out on the previous motherboard. Unfortunately, the motherboard that I got on sale did not have this. Fortunately, fans can easily be controlled by PWM hence this article will guide you to create a very simple and cheap PWM fan controller. But first what is PWM? Pulse-Width Modulation (PWM) for fans To control the fans the motherboard sends out signals that determine the speed fans should run at. The main reason to reduce the fan speed is to reduce the noise it makes. The lower speed is okay as, under a low processor load, the amount of heat that should be dissipated is low. PWM is a signal and a way of communication that tells the fan at what speed it should run. It is a digital signal and has a high (on) and low (off) level as shown here. The frequency (f) of the PWM signal depends on the total time ($T_{on}+T_{off}$), \(f = \frac{1}{T_{on}+T_{off}}.\) The speed of the fan in percentage depends directly on the duty cycle (DT) in percentage, \(\mathrm{DT}=\frac{T_{on}}{T_{on}+T_{off}}.\) so if DT is 0.6 or 60% the speed of the fan will be 60% of its maximum speed. The temperature of a thermistor Okay, we know how to create the signal but how do we know what speed the fans should run at. Depending on the amount of noise you allow at a certain water temperature, the water temperature is key. To find this out we need to translate the resistance of a thermistor back to a temperature. Typically these have a negative temperature coefficient, meaning the resistance decreases as the temperature increases. Since I do not know the model or make of my thermistor, I hoped a commonly used model would be a good fit. The temperature ($T$) as function of the resistance ($R_T$) according to the Steinhart-Hart equation. \(\frac{1}{T}=C_1+C_2\ln{R_T}+C_3(\ln{R_T})^3\) The other option was the $\beta-$equation which is an exponential relationship and can be extended to the Steinhart-Hart equation. Requirements for the PWM fan controller The PWM frequency of computer fans is typically 25 kHz but please check the datasheet. Read temperature from a thermistor The speed range for my fans was 30-100% Tackling each problem 1-by-1 I separated the core functionalities of the fan controller into 3 parts. 1) Microprocessor choice and coding a PWM signal At the beginning of this year, I programmed a variable duty cycle on an Arduino nano. Achieving a PWM frequency of 1 MHz is not possible with the built-in PWM functionality and neither is it variable at the resolution that I wanted (8-bit). To do this I went down one level and set the registers of the timers. However, my experience learnt me this took quite some development time. Therefore, this time I opted to use a different microcontroller where I could just use higher-level functions and generate the PWM signal according to my needs as simple as a few lines of code. I found an STM32F103C8T6 (STM32 black pill) lying around in my closet and found this library that had everything I needed. 2) Temperature readout by voltage divider Just like in one of my past articles I used a voltage divider to find the thermistor resistance. Putting $R_T$ at the position of $R_2$, it can be found from the output voltage as, \(R_T = \frac{R_1}{V_{out}}\) With $R_1$ a chosen resistance in my case 4.7 k$\Omega$. Since the thermistor model is a linearization that is accurate in a certain range, I chose $R_1$ such that it is similar to $R_T$ during computer idle. To find the coefficients, you would take measurements of $R_T$ at for example three different temperatures. Since my sensor was already mounted in the system and it doesn’t have to be very accurate I took a random measurement found on the internet for the same kind of thermistor that I had which is a 10 k$\Omega$-thermistor. Plugged 3-points into this tool for 25, 50, and 70 $^\circ$ C, which is the range I expect the water to be in and thus the sensor to be exposed to. 3) Defining different speed ramp up ranged depending on temperature To create a silent system, you want initially the fan speed to be low at low temperatures and high at high temperatures. But what is low and what is high? Since my fans can not be run below 30%, this was the lower limit (this is not exactly true but I will discuss this later). For heat transfer to occur via convection, there needs to be a temperature difference between the radiator (I assume it is equal to the water temperature) and the environment. My room is typically below 30$^\circ$C therefore up to let say a water temperature of 40$^\circ$C the fans run in the lowest setting and then they should gradually increase. This is split into 2 different ramps in my code which reduces the fan noise. Whenever a lot of heat is dumped into the water, the fans will still go to 100%. This point was chosen to be 70$^\circ$C, because the tubes start to melt at 74$^\circ$C according to the manufacturer. **Be careful that water will slowly evaporate even below its boiling point of 100 $^\circ$C. ** Extra) true 0% PWM Sometimes you might want to go lower than 30% or even turn it off to save power but also to prevent noise. I did not do this as this extra step, requires a lot of effort for very little gain in my case. However, should you want this. The fans can be turned off by setting the PWM duty-cycle to 0%, however most fans don’t support this. In the case when water temperature is already below what you like, in my code 40$^\circ$C. You could switch off a MOSFET thus set the gate voltage to low or 0 V and when it s above 40$^\circ$C you would turn it on. The MOSFET should then connect between your black wire (anode) from your fan and the anode of your power supply. In the situation the fans should be off, the electronic circuit is broken by the switch and no current will be able to flow. Connections Since the connection diagram is quite simple I do it in words. The thermistor has 2 pins (there is no polarity) and should be connected as in the voltage divider, 1 to ground and 1 to $R_1$. Finally, the PWM signal is output at pin PA8 and this should go to the PWM pin as follows, Lastly, power for the microcontroller can be supplied over the micro-USB. The final code #include &amp;lt;Arduino.h&amp;gt; #define inLED PB12 #define PWMpin PA8 #define SERIAL_PORT Serial1 #define f_PWM 25000 #define PWMstatic 30 #define SAMPLES 100 HardwareSerial Serial1(PA_10, PA_9); //Thermistor const #define T_waterpin PA7 int Vo; float Rchosen = 4582; float logR2, R2, T; float c1 = 1.133027435e-03, c2 = 2.334426745e-04, c3 = 0.9074747924e-07; //code variables float Ttest; int PWMdynamic = 0, PWMold= 0; int i, Vs; bool paused = 0; //init specifics of the hardware timer and which effectively pin TIM_TypeDef *Instance = (TIM_TypeDef *)pinmap_peripheral(digitalPinToPinName(PWMpin), PinMap_PWM); uint32_t channel = STM_PIN_CHANNEL(pinmap_function(digitalPinToPinName(PWMpin), PinMap_PWM)); //Timer object init with previous intel HardwareTimer *MyTim = new HardwareTimer(Instance); // no need to configure pin, it will be done by HardwareTimer configuration float reading_to_temp(int number, int R1){ int temp; R2 = R1 / (1023.0 / (float)number - 1.0); logR2 = log(R2); temp = (1.0 / (c1 + c2*logR2 + c3*logR2*logR2*logR2)); temp = temp - 273.15; return temp; } void setup() { pinMode(inLED, OUTPUT); digitalWrite(inLED, LOW); MyTim-&amp;gt;setPWM(channel, PWMpin, f_PWM, PWMstatic); // 5 Hertz, 10% dutycycle } void loop() { //improve averaging of analogread by oversampling because required speed is only ~ Hz. Vs = 0; for(i = 0; i &amp;lt; SAMPLES; i++){ Vs = Vs + analogRead(T_waterpin); } Vo = Vs / SAMPLES; T = reading_to_temp(Vo, Rchosen); Ttest = T; if(Ttest &amp;lt;=40){ PWMdynamic = 30; //MyTim-&amp;gt;pause(); paused = 1; } else if(paused){ paused = 0; //MyTim-&amp;gt;resume(); } if(Ttest &amp;gt; 40 &amp;amp;&amp;amp; Ttest &amp;lt;= 60){ PWMdynamic = 30 + 25 * (Ttest - 40) / 20; } else if(Ttest &amp;gt; 60 &amp;amp;&amp;amp; Ttest &amp;lt;= 70){ PWMdynamic = 55 + 45 * (Ttest - 60) / 10; } else if(Ttest &amp;gt; 70){ PWMdynamic = 100; } //hysteresis to keep number of updates small and prevent oscillatory behaviour. if( abs(PWMdynamic - PWMold) &amp;gt; 3){ MyTim-&amp;gt;setCaptureCompare(channel, PWMdynamic, PERCENT_COMPARE_FORMAT); PWMold = PWMdynamic; } } Final cost Component Cost ($\euro$) Resistor 4k7 0.01/free Black pill (STM32F1) 3.63 Any other STM32 series MCU would work as long as it is supported by the library. It seems my version of black pill is end of life, the new version would work also. Please be careful for the pin assignment, which could be different.</summary></entry><entry><title type="html">Creating a custom PCB business card with EAGLE</title><link href="https://shiko.nl/electronics/designing_business_card/" rel="alternate" type="text/html" title="Creating a custom PCB business card with EAGLE" /><published>2021-04-11T00:00:00+02:00</published><updated>2021-04-11T00:00:00+02:00</updated><id>https://shiko.nl/electronics/designing_business_card</id><content type="html" xml:base="https://shiko.nl/electronics/designing_business_card/">&lt;h1 id=&quot;an-idea&quot;&gt;An idea&lt;/h1&gt;

&lt;p&gt;I have looked into making my own business cards multiple times. They would be useful to carry with you just in case. However I never came up with something unique that would be nice and presentable on a piece of nice luxury paper. However, while browsing for ideas, I did find nice examples which replaced the paper for a PCB.  This was really cool, however doing PCB designs weren’t a thing I was able to do a couple years ago.  Now I recently got more experienced with it and I am about to graduate, it was a perfect time to do my own design.&lt;/p&gt;

&lt;h1 id=&quot;what-do-i-want&quot;&gt;What do I want?&lt;/h1&gt;

&lt;p&gt;I want this business card to be cool, and somewhat useful. I like products that have had a clear thought process beforehand. So I would say,&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Same size as typical business card.&lt;/li&gt;
  &lt;li&gt;Cool, design features impossible on typical paper business card.&lt;/li&gt;
  &lt;li&gt;Useful, lets say I give this card to a recruiter. It would be a nice reminder having talked with me. Improving my chances of getting the job I want.&lt;/li&gt;
  &lt;li&gt;Simple but also unique showing the creativity needed to do engineering designs.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;how&quot;&gt;How?&lt;/h1&gt;

&lt;p&gt;First I started by collecting ideas and I saw some very unique PCB cards. For example, &lt;a href=&quot;&amp;quot;https://www.google.com/search?q=pcb+business+card&amp;amp;client=firefox-b-d&amp;amp;sxsrf=ALeKk02-8y1NE3u8AhbRpbBq_J0UfmPOUQ:1618153951099&amp;amp;source=lnms&amp;amp;tbm=isch&amp;amp;sa=X&amp;amp;ved=2ahUKEwirqsmbvfbvAhWdgf0HHaolBwoQ_AUoAXoECAEQAw&amp;amp;biw=2560&amp;amp;bih=1327#imgrc=JujfB-PWKPAzyM&amp;quot;&quot;&gt;example 1&lt;/a&gt; or &lt;a href=&quot;https://www.instructables.com/PCB-Business-Card-With-NFC/&quot;&gt;example 2&lt;/a&gt;. I like simple things so the card in example 1, however very useful is too “busy”. Example 2 does a much nicer job of being “peaceful” and concise.&lt;/p&gt;

&lt;h2 id=&quot;qr-code-generator&quot;&gt;QR-code generator&lt;/h2&gt;

&lt;p&gt;I really liked the QR-code in example 1, so I also wanted that in my design. I found out it is quite difficult to find a nice QR-code generator just googling “QR-code generator”. Either you had to pay or it was in JPEG, which means scaling it could become pixelated. Adding “github” to the search terms led me to the project of &lt;a href=&quot;https://github.com/nayuki/QR-Code-generator&quot;&gt;nayuki&lt;/a&gt;, a nice open-source QR-code generator, this person even hosts it on &lt;a href=&quot;https://www.nayuki.io/page/qr-code-generator-library&quot;&gt;their&lt;/a&gt; website so I don’t even need to compile it for my use!&lt;/p&gt;

&lt;h2 id=&quot;stock-icons&quot;&gt;Stock icons&lt;/h2&gt;

&lt;p&gt;I think adding icons are visually pleasing and is straight to the point. So instead of “just” putting my email on the card, I want to prefix it with an icon. Since I don’t want to reinvent the wheel, I looked for basic icons such as email, phone, LinkedIn and blog. Because I want to use this  kind of professionally I had to make sure I wasn’t stealing these icons.  I opted to use fontawesome icons. The icons can be downloaded as SVG under &lt;a href=&quot;https://fontawesome.com/license&quot;&gt;CCA 4.0&lt;/a&gt;. These were then imported into the PCB design software as-is.&lt;/p&gt;

&lt;h2 id=&quot;pcb-design-software&quot;&gt;PCB design software&lt;/h2&gt;

&lt;p&gt;I use EAGLE as my design software since I already use fusion 360 for my for my 3D-printer designs. In order to keep everything scalable, I use vector images which can then be converted using the open-source tool by &lt;a href=&quot;https://gfwilliams.github.io/svgtoeagle/&quot;&gt;Gordon Williams&lt;/a&gt;. The SVG files are put together in inkscape and then converted to EAGLE commands that draws the equivalent inside the EAGLE schematic.&lt;/p&gt;

&lt;h1 id=&quot;why-or-engineering-notes&quot;&gt;Why? (or engineering notes)&lt;/h1&gt;

&lt;p&gt;The core theme of the card is the large balance scale visible at the bottom, in my opinion engineering is all about making decisions and balancing (see what I did here?) their pros and cons. In order to design complex systems you can’t optimize every parameter isolated, as it is typically balanced-out/influenced by another parameter. Not to mention that time is not infinite and is a very critical parameter for companies known as time to market. The only solution is to make informed choices which can only be achieved by experience of others or yourself. Me gaining experience in various fields and sharing this is the ultimate goal of this blog.&lt;/p&gt;

&lt;p&gt;The scale, is built from drawing the scale in a metal layer, and keeping the background blank. Creating contrast with depth and forming the scale image.&lt;/p&gt;

&lt;p&gt;Continuing, in the scale you will find 2 QR-codes, LinkedIn (left) and this blog (right). I opted to use large amount of error correction, since I knew I would put an image inside the QR code and the inaccuracies of silkscreen could influence the readability of the code. This did greatly increase the size of the QR-code, however I was not heavily constrained in useable area. Some people instead use a NFC chip to forward their websites, however I did not find the added complexity of soldering a chip and using the whole back for the antenna worth conveying something that can be easily achieved with a QR-code. Also is cheaper and more likely to be used as there are more smartphones with a camera to read the QR-code than smartphones with a NFC-chip.&lt;/p&gt;

&lt;p&gt;It also features a paperclip, this is one of the features I wanted to add. Because, I can imagine that recruiters are people who might want to deal with a paper-CV during an interview. A paper clip would be great to hold it together.&lt;/p&gt;

&lt;p&gt;On the back, as main theme the sumo wrestler doing their brand move and is what inspired me to call the website “shiko”, the name of this move. The sun is created by drawing a circle and the rays by rotating a single ray over 360 degrees and is cut to fit within the card.&lt;/p&gt;

&lt;p&gt;The feature for the back is a ruler, could come in handy. It was relatively concise and created with &lt;a href=&quot;https://robbbb.github.io/VectorRuler/&quot;&gt;this tool&lt;/a&gt;.However was not dimensionally accurate so I had to manually resize it to fit.&lt;/p&gt;

&lt;p&gt;Finally, when manufacturing this PCB I wanted it to feel professional and luxurious, I found that 0.8 mm thick PCB fit this, with a gold finish (ENIG).&lt;/p&gt;

&lt;h1 id=&quot;the-end-of-this-journey&quot;&gt;The end of this journey&lt;/h1&gt;

&lt;p&gt;Did I learn a lot? Yes I did.&lt;/p&gt;

&lt;p&gt;I think I used EAGLE in ways it wasn’t designed to be, but it all worked fine and showed me the limitations (no built-in support to import SVG images) but also the possibilities (a PCB design with no electrical components!).&lt;/p&gt;

&lt;p&gt;I hope this post now motivated you also to create your own awesome PCB business card!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/shikon/cloudimg/master/typora/IMG_20210411_183207.jpg&quot; alt=&quot;IMG_20210411_183207&quot; /&gt;&lt;/p&gt;</content><author><name>Lan Hu</name></author><category term="electronics" /><category term="PCB" /><category term="CAD" /><category term="design" /><summary type="html">An idea I have looked into making my own business cards multiple times. They would be useful to carry with you just in case. However I never came up with something unique that would be nice and presentable on a piece of nice luxury paper. However, while browsing for ideas, I did find nice examples which replaced the paper for a PCB. This was really cool, however doing PCB designs weren’t a thing I was able to do a couple years ago. Now I recently got more experienced with it and I am about to graduate, it was a perfect time to do my own design. What do I want? I want this business card to be cool, and somewhat useful. I like products that have had a clear thought process beforehand. So I would say, Same size as typical business card. Cool, design features impossible on typical paper business card. Useful, lets say I give this card to a recruiter. It would be a nice reminder having talked with me. Improving my chances of getting the job I want. Simple but also unique showing the creativity needed to do engineering designs. How? First I started by collecting ideas and I saw some very unique PCB cards. For example, example 1 or example 2. I like simple things so the card in example 1, however very useful is too “busy”. Example 2 does a much nicer job of being “peaceful” and concise. QR-code generator I really liked the QR-code in example 1, so I also wanted that in my design. I found out it is quite difficult to find a nice QR-code generator just googling “QR-code generator”. Either you had to pay or it was in JPEG, which means scaling it could become pixelated. Adding “github” to the search terms led me to the project of nayuki, a nice open-source QR-code generator, this person even hosts it on their website so I don’t even need to compile it for my use! Stock icons I think adding icons are visually pleasing and is straight to the point. So instead of “just” putting my email on the card, I want to prefix it with an icon. Since I don’t want to reinvent the wheel, I looked for basic icons such as email, phone, LinkedIn and blog. Because I want to use this kind of professionally I had to make sure I wasn’t stealing these icons. I opted to use fontawesome icons. The icons can be downloaded as SVG under CCA 4.0. These were then imported into the PCB design software as-is. PCB design software I use EAGLE as my design software since I already use fusion 360 for my for my 3D-printer designs. In order to keep everything scalable, I use vector images which can then be converted using the open-source tool by Gordon Williams. The SVG files are put together in inkscape and then converted to EAGLE commands that draws the equivalent inside the EAGLE schematic. Why? (or engineering notes) The core theme of the card is the large balance scale visible at the bottom, in my opinion engineering is all about making decisions and balancing (see what I did here?) their pros and cons. In order to design complex systems you can’t optimize every parameter isolated, as it is typically balanced-out/influenced by another parameter. Not to mention that time is not infinite and is a very critical parameter for companies known as time to market. The only solution is to make informed choices which can only be achieved by experience of others or yourself. Me gaining experience in various fields and sharing this is the ultimate goal of this blog. The scale, is built from drawing the scale in a metal layer, and keeping the background blank. Creating contrast with depth and forming the scale image. Continuing, in the scale you will find 2 QR-codes, LinkedIn (left) and this blog (right). I opted to use large amount of error correction, since I knew I would put an image inside the QR code and the inaccuracies of silkscreen could influence the readability of the code. This did greatly increase the size of the QR-code, however I was not heavily constrained in useable area. Some people instead use a NFC chip to forward their websites, however I did not find the added complexity of soldering a chip and using the whole back for the antenna worth conveying something that can be easily achieved with a QR-code. Also is cheaper and more likely to be used as there are more smartphones with a camera to read the QR-code than smartphones with a NFC-chip. It also features a paperclip, this is one of the features I wanted to add. Because, I can imagine that recruiters are people who might want to deal with a paper-CV during an interview. A paper clip would be great to hold it together. On the back, as main theme the sumo wrestler doing their brand move and is what inspired me to call the website “shiko”, the name of this move. The sun is created by drawing a circle and the rays by rotating a single ray over 360 degrees and is cut to fit within the card. The feature for the back is a ruler, could come in handy. It was relatively concise and created with this tool.However was not dimensionally accurate so I had to manually resize it to fit. Finally, when manufacturing this PCB I wanted it to feel professional and luxurious, I found that 0.8 mm thick PCB fit this, with a gold finish (ENIG). The end of this journey Did I learn a lot? Yes I did. I think I used EAGLE in ways it wasn’t designed to be, but it all worked fine and showed me the limitations (no built-in support to import SVG images) but also the possibilities (a PCB design with no electrical components!). I hope this post now motivated you also to create your own awesome PCB business card!</summary></entry><entry><title type="html">Automating jekyll build and github hosting</title><link href="https://shiko.nl/programming/automating_jekyll/" rel="alternate" type="text/html" title="Automating jekyll build and github hosting" /><published>2021-01-24T00:00:00+01:00</published><updated>2021-01-24T00:00:00+01:00</updated><id>https://shiko.nl/programming/automating_jekyll</id><content type="html" xml:base="https://shiko.nl/programming/automating_jekyll/">&lt;h1 id=&quot;backstory&quot;&gt;Backstory&lt;/h1&gt;

&lt;p&gt;As people might have noticed this website runs on jekyll, which is code that creates static websites. Great for my simple blogging use. The easiest way for me to get &lt;a href=&quot;https://mmistakes.github.io/minimal-mistakes/&quot;&gt;this&lt;/a&gt; nice skin working on github pages was to use their remote theme function. However, letting github compile the website leads to some limitation such as plugin use. In order to futureproof myself (files come and go…) I would rather compile it locally and make only use of github’s free hosting.&lt;/p&gt;

&lt;h1 id=&quot;googling-a-solution&quot;&gt;Googling a solution&lt;/h1&gt;

&lt;p&gt;Google is my friend, apparently people compile Jekyll locally, mainly for unsupported plugin.  Therefore I searched using the following keywords “Jekyll static github pages with unsupported plugins” and came along &lt;a href=&quot;https://tiefenauer.github.io/blog/gh-pages-plugins/&quot;&gt;Dani’s&lt;/a&gt; nice write-up. Unfortunately, his method on how to update the website didn’t work for me, and is probably due to the lack of my understanding of how git works. I did follow the preceding steps in his guide.  However this lead me to a much better solution which automates a great deal and makes it as easy as a single push of a button ;).  Browsing the internet a bit more I came across &lt;a href=&quot;https://surdu.me/2020/02/04/jekyll-git-hook.html&quot;&gt;Surdu’s&lt;/a&gt; script, which made life easier.&lt;/p&gt;

&lt;h1 id=&quot;working-out-the-details&quot;&gt;Working out the details&lt;/h1&gt;

&lt;p&gt;The goal is to enable static webpage hosting on github. And also try to make this as effortless possible.  That is so I can focus my time on my projects and not the nitty gritty.&lt;/p&gt;

&lt;p&gt;At the end you will have achieved the following.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Keep files in 1 repository, this makes sense as they belong together&lt;/li&gt;
  &lt;li&gt;Store website files in the branch “head”, as github will interpret this to the website files under yourname.github.io&lt;/li&gt;
  &lt;li&gt;Store source files in the branch “source”&lt;/li&gt;
  &lt;li&gt;Pushing your new posts will recompile the website and update your webpage accordingly&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I will assume you understand:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Basics of git, at least how to set it. Such you can send git commands in the terminal&lt;/li&gt;
  &lt;li&gt;Have jekyll already installed and working. If not see for example &lt;a href=&quot;http://sgeos.github.io/jekyll/github/freebsd/2016/01/07/creating-a-jekyll-github-pages-blog-and-managing-it-with-freebsd.html&quot;&gt;this.&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Basic use of unix&lt;/li&gt;
  &lt;li&gt;Use the bundle command to compile your jekyll website&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;separating-by-branching&quot;&gt;Separating by branching&lt;/h2&gt;

&lt;p&gt;In order for github to correctly interpret your files.  We should push the compiled files (defaults to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_site&lt;/code&gt; -inside-) to our head branch. All other files are pushed to our source branch. To achieve this do the following. In your repository folder which is also the main jekyll folder now &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;root&lt;/code&gt;,&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Put &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_site/&lt;/code&gt; in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.gitignore&lt;/code&gt; file&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git checkout source&lt;/code&gt;, push and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git checkout master&lt;/code&gt;. Compile the website &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bundle exec jekyll build&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cd _site&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;touch .nojekyll&lt;/code&gt; this prevents github to compile&lt;/li&gt;
  &lt;li&gt;Go back to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;root&lt;/code&gt;, backup all files and remove everything inside except the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.gitignore&lt;/code&gt; file.&lt;/li&gt;
  &lt;li&gt;Copy everything inside &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_site&lt;/code&gt; -which you backed up- to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;root&lt;/code&gt; and push. Delete &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_site&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git checkout sources&lt;/code&gt; and copy everything back (not &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_site&lt;/code&gt;, should be removed) and push. Now github will display your locally compiled website. While your source files are inside the source branch.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;‘*’ a push entails, easily,&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git add .
git commit -m 'commit message'
git push
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;script-for-updating&quot;&gt;Script for updating&lt;/h2&gt;

&lt;p&gt;The complex workflow noted by Dani didn’t work out and I am lazy. So we are going to automate the flow of updating the website and updating our branches accordingly. This script is based on Surdu’s script, but first.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Create a file “pre-push” &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nano root/.git/hooks/pre-push&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;With the following content&lt;/p&gt;

    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#!/bin/sh
# This script assumes the master branch is the website therefore all compiled files should be in master branch
# the source branch holds all your files, please put &amp;lt;_site/&amp;gt; in your git.ignore file
   
# If any command fails in the below script, exit with error
set -e
   
# Set the name of the folder that will be created in the parent
# folder of your repo folder, and which will temporarily
# hold the generated content.
temp_folder=&quot;_source-temp&quot;
   
# Make sure our main code runs only if we push the master branch
if [ &quot;$(git rev-parse --symbolic-full-name --abbrev-ref HEAD)&quot; == &quot;source&quot; ]; then
	# Store the last commit message from source branch
	last_message=$(git show -s --format=%s source)
   
	# Build our Jekyll site
	bundle exec jekyll build
   
	# Move the generated site in our temp folder
	mv _site ../${temp_folder}
   
	# Checkout the gh-pages branch and clean it's contents
	git checkout master
	rm -rf *
   
	# Copy the site content from the temp folder and remove the temp folder
	cp -r ../${temp_folder}/* .
	rm -rf ../${temp_folder}
   
	# Commit and push our generated site to GitHub
	git add -A
	git commit -m &quot;Built \`$last_message\`&quot;
	git push
   
	# Go back to the source branch
	git checkout source
else
	echo &quot;Not source branch. Skipping build&quot;
fi
   
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;chmod +x root/.git/hooks/pre-push&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Add your new files and recompile by doing a push in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;root&lt;/code&gt;.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;end&quot;&gt;End&lt;/h1&gt;

&lt;p&gt;If anything is unclear or not working don’t hesitate to leave a comment (if it works).&lt;/p&gt;</content><author><name>Lan Hu</name></author><category term="programming" /><category term="automating" /><category term="server" /><category term="design" /><summary type="html">Backstory As people might have noticed this website runs on jekyll, which is code that creates static websites. Great for my simple blogging use. The easiest way for me to get this nice skin working on github pages was to use their remote theme function. However, letting github compile the website leads to some limitation such as plugin use. In order to futureproof myself (files come and go…) I would rather compile it locally and make only use of github’s free hosting. Googling a solution Google is my friend, apparently people compile Jekyll locally, mainly for unsupported plugin. Therefore I searched using the following keywords “Jekyll static github pages with unsupported plugins” and came along Dani’s nice write-up. Unfortunately, his method on how to update the website didn’t work for me, and is probably due to the lack of my understanding of how git works. I did follow the preceding steps in his guide. However this lead me to a much better solution which automates a great deal and makes it as easy as a single push of a button ;). Browsing the internet a bit more I came across Surdu’s script, which made life easier. Working out the details The goal is to enable static webpage hosting on github. And also try to make this as effortless possible. That is so I can focus my time on my projects and not the nitty gritty. At the end you will have achieved the following. Keep files in 1 repository, this makes sense as they belong together Store website files in the branch “head”, as github will interpret this to the website files under yourname.github.io Store source files in the branch “source” Pushing your new posts will recompile the website and update your webpage accordingly I will assume you understand: Basics of git, at least how to set it. Such you can send git commands in the terminal Have jekyll already installed and working. If not see for example this. Basic use of unix Use the bundle command to compile your jekyll website Separating by branching In order for github to correctly interpret your files. We should push the compiled files (defaults to _site -inside-) to our head branch. All other files are pushed to our source branch. To achieve this do the following. In your repository folder which is also the main jekyll folder now root, Put _site/ in the .gitignore file git checkout source, push and git checkout master. Compile the website bundle exec jekyll build. cd _site and touch .nojekyll this prevents github to compile Go back to root, backup all files and remove everything inside except the .gitignore file. Copy everything inside _site -which you backed up- to root and push. Delete _site. git checkout sources and copy everything back (not _site, should be removed) and push. Now github will display your locally compiled website. While your source files are inside the source branch. ‘*’ a push entails, easily, git add . git commit -m 'commit message' git push Script for updating The complex workflow noted by Dani didn’t work out and I am lazy. So we are going to automate the flow of updating the website and updating our branches accordingly. This script is based on Surdu’s script, but first. Create a file “pre-push” nano root/.git/hooks/pre-push With the following content #!/bin/sh # This script assumes the master branch is the website therefore all compiled files should be in master branch # the source branch holds all your files, please put &amp;lt;_site/&amp;gt; in your git.ignore file # If any command fails in the below script, exit with error set -e # Set the name of the folder that will be created in the parent # folder of your repo folder, and which will temporarily # hold the generated content. temp_folder=&quot;_source-temp&quot; # Make sure our main code runs only if we push the master branch if [ &quot;$(git rev-parse --symbolic-full-name --abbrev-ref HEAD)&quot; == &quot;source&quot; ]; then # Store the last commit message from source branch last_message=$(git show -s --format=%s source) # Build our Jekyll site bundle exec jekyll build # Move the generated site in our temp folder mv _site ../${temp_folder} # Checkout the gh-pages branch and clean it's contents git checkout master rm -rf * # Copy the site content from the temp folder and remove the temp folder cp -r ../${temp_folder}/* . rm -rf ../${temp_folder} # Commit and push our generated site to GitHub git add -A git commit -m &quot;Built \`$last_message\`&quot; git push # Go back to the source branch git checkout source else echo &quot;Not source branch. Skipping build&quot; fi chmod +x root/.git/hooks/pre-push Add your new files and recompile by doing a push in root. End If anything is unclear or not working don’t hesitate to leave a comment (if it works).</summary></entry><entry><title type="html">Designing a Nixie HV supply part 1</title><link href="https://shiko.nl/electronics/a-pcb-design/" rel="alternate" type="text/html" title="Designing a Nixie HV supply part 1" /><published>2021-01-02T00:00:00+01:00</published><updated>2021-01-09T16:00:23+01:00</updated><id>https://shiko.nl/electronics/a-pcb-design</id><content type="html" xml:base="https://shiko.nl/electronics/a-pcb-design/">&lt;h1 id=&quot;backstory&quot;&gt;Backstory&lt;/h1&gt;

&lt;p&gt;Well basically the backstory is the introduction but shht :). Recently I designed a small PCB with an analog switch for my internship project. This made me remember, I still have to finish my PCB I was doing for my nixie tube clock. Don’t know what those are? Well, here is an example:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/shikon/cloudimg/master/typora/xclock_small.jpg.pagespeed.ic.5qBb-pWZkY.webp&quot; alt=&quot;Meinbergnews&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I noticed that a huge area was taken by the high-voltage (HV) supply. It is a NCH6100HV, which I bought a couple years ago… The voltage is changeable by a potentiometer, great to experiment with. I was motivated to make it smaller but not only that. During the previous design process, I noticed creating your supplies is something any electronics project is needed. In my case I couldn’t use the very efficient switch-mode power supplies (SMPS) on my small analog switch PCB, as these typically have a lot of switching noise. They would be ideal as you can easily go up in voltage (boost) or down (buck). This made me intrigued but I couldn’t spend time to explore this. Well, during my New years break however, that means project time!&lt;/p&gt;

&lt;h1 id=&quot;interwebs-a-gold-mine&quot;&gt;Interwebs, a gold mine&lt;/h1&gt;

&lt;p&gt;I remember few years ago reading about these supplies being made by hobbyist. So I re-googled these projects and they became a great resource for my nixie tube HV supply. I mainly used these resources:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://desmith.net/NMdS/Electronics/NixiePSU.html&quot;&gt;de Smith&lt;/a&gt; focusses mainly on layout&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://jan.rychter.com/high-voltage-power-supply-for-nixie-tube-projects&quot;&gt;Jan Rychter&lt;/a&gt; focusses on general design specifications&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://0x7d.com/2017/nixie-tube-clock/#Custom_Power_Supply&quot;&gt;0x7d&lt;/a&gt; includes some general information about a few working principles of SMPS&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Having scanned over these great projects it was time to dive into the theory.&lt;/p&gt;

&lt;h2 id=&quot;working-principle-of-smps&quot;&gt;Working principle of SMPS&lt;/h2&gt;

&lt;p&gt;The goal is to create a DC high-voltage supply from a lower voltage supply.  Just like climbing a mountain going up is a bit more difficult than going down. An example, a bad one however, is to create a lower voltage is using a so called voltage divider. If the load isn’t too heavy its fine but due to the fixed output impedance of the resistive ladder it will be easily disturbed by its load.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/shikon/cloudimg/master/typora/330px-Impedance_voltage_divider.svg.png&quot; alt=&quot;Wikipedia&quot; /&gt;
&lt;em&gt;From &lt;a href=&quot;https://en.wikipedia.org/wiki/Voltage_divider&quot;&gt;wikipedia&lt;/a&gt;, here \(V_{out}=\frac{Z_2}{Z_1}V_{in}.\)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;But the question was how to go up. Well the most common way to step up a DC voltage is to use a boost configuration and is in its simplest sense the following circuit.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/shikon/cloudimg/master/typora/boost_circuit_v2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The MOSFET acts as an on/off switch. Initially it is switched on, a certain current will set. When it is switched off, the current has less “way” to flow. The only path is to go through the diode and capacitor.  Basically the impedance to the right of the inductor has increased, the current want to decrease. However the inductor tries to counter this, the magnetic field it built up doesn’t want to change. It will increase the voltage to keep the current the same.  Ohm’s law with impedance (\(I = V/Z\)) tells, to keep I the same for larger Z we need to increase V. Indeed the constitutive relation of an inductor, \(V=-L\frac{\mathrm{d}I}{\mathrm{d}t}\), tells for decreasing current \(\frac{\mathrm{d}I}{\mathrm{d}t}&amp;lt;0\) , there is a positive voltage, two voltage sources in series add up. This charges the capacitor to higher voltages than the input. In order to prevent the charge from flowing back -which is required to build a higher output voltage- a diode is required.&lt;/p&gt;

&lt;h2 id=&quot;how-do-we-determine-the-output-voltage&quot;&gt;How do we determine the output voltage?&lt;/h2&gt;

&lt;p&gt;The output voltage is simple for continuous mode (CCM) and more complex when the converter is in discontinuous mode. Discontinuous mode (DCM) commonly occurs under light loads, as the current is low and quickly falls off to zero.  In CCM it is determined solely by the duty cycle (D&amp;lt;1), \(V_{out}=\frac{V_{in}}{1-D}\). As said before in DCM, it is more complex and determined as well by the inductance, the load and switching frequency\(\left(V_{out}=\frac{1+\sqrt{1+\frac{4DR_{load}}{2Lf}}}{2}\right)\).&lt;/p&gt;

&lt;h2 id=&quot;ccm-vs-dcm&quot;&gt;CCM VS DCM&lt;/h2&gt;

&lt;p&gt;Although DCM seems more complex, due to the feedback of DC-DC boost controllers, the design is actually easier. All you need to set the output, is to sense the output. For CCM you need to ensure the current through the inductor doesn’t fall to zero. However in DCM the inductor fully cycles in current levels and therefore leads to higher peak currents. These higher peak currents require higher component ratings, lead to decreased lifetime and power efficiency.&lt;/p&gt;

&lt;h1 id=&quot;but-first&quot;&gt;But first…&lt;/h1&gt;

&lt;p&gt;I didn’t want to repeat existing designs, that I could just copy from the internet or datasheets. I went out to research different topologies. You will find typically find the following DC-DC converter topologies.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Topology&lt;/th&gt;
      &lt;th&gt;Characteristics&lt;/th&gt;
      &lt;th&gt;Advantage&lt;/th&gt;
      &lt;th&gt;Disadvantage&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Boost&lt;/td&gt;
      &lt;td&gt;Go up in voltage&lt;/td&gt;
      &lt;td&gt;most simple&lt;/td&gt;
      &lt;td&gt;efficiency by simplicity&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;SEPIC&lt;/td&gt;
      &lt;td&gt;Go up and down in voltage&lt;/td&gt;
      &lt;td&gt;non-inverting&lt;/td&gt;
      &lt;td&gt;complexity&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Buck-boost&lt;/td&gt;
      &lt;td&gt;Go up and down in voltage&lt;/td&gt;
      &lt;td&gt;can go down in voltage&lt;/td&gt;
      &lt;td&gt;inverting&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Ćuk&lt;/td&gt;
      &lt;td&gt;Go up and down in voltage&lt;/td&gt;
      &lt;td&gt;continuous current&lt;/td&gt;
      &lt;td&gt;inverting&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;The Ćuk topology was intriguing as it could nicely operate in CCM mode, however it was inverting requiring even more components than boosts. The others only added going down in voltage which would be handy in applications which are for example battery powered. Here you start with larger voltage, this decreases over time and you need to switch from going down in voltage to going up. This then requires your topology to support both conversions.  But in my case this is unnecessary as it will be powered from a wall adapter and step up to very high voltages.&lt;/p&gt;

&lt;h2 id=&quot;what-then&quot;&gt;What then?&lt;/h2&gt;

&lt;p&gt;Well I don’t dislike reading papers so I just googled and came across so called &lt;em&gt;charge pumps&lt;/em&gt; the research community really like these as these can have very high efficiencies and don’t require inductors such as in the boost topology. &lt;a href=&quot;https://ieeexplore.ieee.org/document/1624399&quot;&gt;For more info on these click here.&lt;/a&gt; Sadly, this topology would require a lot of stages in order to boost 12 V to 180 V, although not a problem when doing an integrated design. I am building a PCB with discrete components and needing tens of capacitors is non-ideal.&lt;/p&gt;

&lt;h2 id=&quot;is-all-hope-lost&quot;&gt;Is all hope lost?&lt;/h2&gt;

&lt;p&gt;Do I have to settle with the regular boost topology? I guess. It is very simple and I like simple things, as even the simple things can turn out to be difficult. So Keep It Simple Stupid (KISS). The main element in boost converters is the inductor, there are typically 2 versions. The non-isolated (&lt;a href=&quot;https://jan.rychter.com/high-voltage-power-supply-for-nixie-tube-projects&quot;&gt;see Jan Rychter&lt;/a&gt;) and isolated version (&lt;a href=&quot;https://0x7d.com/2017/nixie-tube-clock/#Custom_Power_Supply&quot;&gt;0x7d&lt;/a&gt;). The isolated version uses an transformer and doing this has many advantages. It separates the input circuit and output circuit, however note that the ground is still common. But the intrinsic gain transformers can have is much more interesting for me. Since the power in these converter is going to be below 20 W. Those don’t really require galvanic isolation. The intrinsic gain relaxes various design parameters. The gain of the DC-DC converter is relaxed. Stepping up 12 V to 180 V requires a gain of 15 and this means in CCM mode requires a duty cycle of ~93%. This raises a few issues, boost controllers have a minimum on/off time, a minimum frequency and a maximum duty cycle. Lets have a look into this.&lt;/p&gt;

&lt;h1 id=&quot;math&quot;&gt;Math?!&lt;/h1&gt;

&lt;p&gt;Well yeah to do some good engineering, math always plays game. But that will be for part 2.&lt;/p&gt;</content><author><name>Lan Hu</name></author><category term="electronics" /><category term="PCB" /><category term="CAD" /><category term="design" /><category term="project" /><summary type="html">Backstory Well basically the backstory is the introduction but shht :). Recently I designed a small PCB with an analog switch for my internship project. This made me remember, I still have to finish my PCB I was doing for my nixie tube clock. Don’t know what those are? Well, here is an example: I noticed that a huge area was taken by the high-voltage (HV) supply. It is a NCH6100HV, which I bought a couple years ago… The voltage is changeable by a potentiometer, great to experiment with. I was motivated to make it smaller but not only that. During the previous design process, I noticed creating your supplies is something any electronics project is needed. In my case I couldn’t use the very efficient switch-mode power supplies (SMPS) on my small analog switch PCB, as these typically have a lot of switching noise. They would be ideal as you can easily go up in voltage (boost) or down (buck). This made me intrigued but I couldn’t spend time to explore this. Well, during my New years break however, that means project time! Interwebs, a gold mine I remember few years ago reading about these supplies being made by hobbyist. So I re-googled these projects and they became a great resource for my nixie tube HV supply. I mainly used these resources: de Smith focusses mainly on layout Jan Rychter focusses on general design specifications 0x7d includes some general information about a few working principles of SMPS Having scanned over these great projects it was time to dive into the theory. Working principle of SMPS The goal is to create a DC high-voltage supply from a lower voltage supply. Just like climbing a mountain going up is a bit more difficult than going down. An example, a bad one however, is to create a lower voltage is using a so called voltage divider. If the load isn’t too heavy its fine but due to the fixed output impedance of the resistive ladder it will be easily disturbed by its load. From wikipedia, here \(V_{out}=\frac{Z_2}{Z_1}V_{in}.\) But the question was how to go up. Well the most common way to step up a DC voltage is to use a boost configuration and is in its simplest sense the following circuit. The MOSFET acts as an on/off switch. Initially it is switched on, a certain current will set. When it is switched off, the current has less “way” to flow. The only path is to go through the diode and capacitor. Basically the impedance to the right of the inductor has increased, the current want to decrease. However the inductor tries to counter this, the magnetic field it built up doesn’t want to change. It will increase the voltage to keep the current the same. Ohm’s law with impedance (\(I = V/Z\)) tells, to keep I the same for larger Z we need to increase V. Indeed the constitutive relation of an inductor, \(V=-L\frac{\mathrm{d}I}{\mathrm{d}t}\), tells for decreasing current \(\frac{\mathrm{d}I}{\mathrm{d}t}&amp;lt;0\) , there is a positive voltage, two voltage sources in series add up. This charges the capacitor to higher voltages than the input. In order to prevent the charge from flowing back -which is required to build a higher output voltage- a diode is required. How do we determine the output voltage? The output voltage is simple for continuous mode (CCM) and more complex when the converter is in discontinuous mode. Discontinuous mode (DCM) commonly occurs under light loads, as the current is low and quickly falls off to zero. In CCM it is determined solely by the duty cycle (D&amp;lt;1), \(V_{out}=\frac{V_{in}}{1-D}\). As said before in DCM, it is more complex and determined as well by the inductance, the load and switching frequency\(\left(V_{out}=\frac{1+\sqrt{1+\frac{4DR_{load}}{2Lf}}}{2}\right)\). CCM VS DCM Although DCM seems more complex, due to the feedback of DC-DC boost controllers, the design is actually easier. All you need to set the output, is to sense the output. For CCM you need to ensure the current through the inductor doesn’t fall to zero. However in DCM the inductor fully cycles in current levels and therefore leads to higher peak currents. These higher peak currents require higher component ratings, lead to decreased lifetime and power efficiency. But first… I didn’t want to repeat existing designs, that I could just copy from the internet or datasheets. I went out to research different topologies. You will find typically find the following DC-DC converter topologies. Topology Characteristics Advantage Disadvantage Boost Go up in voltage most simple efficiency by simplicity SEPIC Go up and down in voltage non-inverting complexity Buck-boost Go up and down in voltage can go down in voltage inverting Ćuk Go up and down in voltage continuous current inverting The Ćuk topology was intriguing as it could nicely operate in CCM mode, however it was inverting requiring even more components than boosts. The others only added going down in voltage which would be handy in applications which are for example battery powered. Here you start with larger voltage, this decreases over time and you need to switch from going down in voltage to going up. This then requires your topology to support both conversions. But in my case this is unnecessary as it will be powered from a wall adapter and step up to very high voltages. What then? Well I don’t dislike reading papers so I just googled and came across so called charge pumps the research community really like these as these can have very high efficiencies and don’t require inductors such as in the boost topology. For more info on these click here. Sadly, this topology would require a lot of stages in order to boost 12 V to 180 V, although not a problem when doing an integrated design. I am building a PCB with discrete components and needing tens of capacitors is non-ideal. Is all hope lost? Do I have to settle with the regular boost topology? I guess. It is very simple and I like simple things, as even the simple things can turn out to be difficult. So Keep It Simple Stupid (KISS). The main element in boost converters is the inductor, there are typically 2 versions. The non-isolated (see Jan Rychter) and isolated version (0x7d). The isolated version uses an transformer and doing this has many advantages. It separates the input circuit and output circuit, however note that the ground is still common. But the intrinsic gain transformers can have is much more interesting for me. Since the power in these converter is going to be below 20 W. Those don’t really require galvanic isolation. The intrinsic gain relaxes various design parameters. The gain of the DC-DC converter is relaxed. Stepping up 12 V to 180 V requires a gain of 15 and this means in CCM mode requires a duty cycle of ~93%. This raises a few issues, boost controllers have a minimum on/off time, a minimum frequency and a maximum duty cycle. Lets have a look into this. Math?! Well yeah to do some good engineering, math always plays game. But that will be for part 2.</summary></entry><entry><title type="html">Drawing O-rings for dad aka printing O-rings for dad part 2</title><link href="https://shiko.nl/3d-printing/drawing-orings/" rel="alternate" type="text/html" title="Drawing O-rings for dad aka printing O-rings for dad part 2" /><published>2020-12-28T00:00:00+01:00</published><updated>2020-12-28T00:00:00+01:00</updated><id>https://shiko.nl/3d-printing/drawing-orings</id><content type="html" xml:base="https://shiko.nl/3d-printing/drawing-orings/">&lt;h1 id=&quot;practicalities&quot;&gt;Practicalities…&lt;/h1&gt;

&lt;p&gt;While waiting for my Sainsmart 3D TPU filament to arrive, I still needed some other parts before I could start the printing. That is a CAD drawing of such O-ring. I thought I would finish this in a couple of minutes, I mean how hard could it be? I simply draw a ring and that’s it. Always, in practice or in reality if you want, it does not come easy. At least if you are unexperienced, things you know how to, well… you know how to. Therefore they are easy :).&lt;/p&gt;

&lt;h2 id=&quot;o-ring-or-square-ring&quot;&gt;O-ring or square-ring?&lt;/h2&gt;

&lt;p&gt;First I started with two circles, and then you would extrude it up a little to get a 3D part. Circles are 2D as they “live” in a plane. If you could pull it up well then you would end up with a sort of squished cylinder and it becomes 3D! Something like below. But then I realized in my situation I would prefer not to have 2 “flat” sides. Which ends up to be more of a square ring. &lt;img src=&quot;https://raw.githubusercontent.com/shikon/cloudimg/master/typora/Fusion360_vJH1eaxSPz.jpg&quot; alt=&quot;Fusion360_vJH1eaxSPz&quot; /&gt;&lt;/p&gt;

&lt;p&gt;To mimic a real O-ring both sides would’ve have been well round and like a circle, but this is unpractical for a 3D-printer. Since it prints on a flat surface, one side eventually ends up flat. Therefore, it would be stupid to draw it round. Well you could try, but that would mean the following printed layers have to “fly”. This is called overhang and while it allows for some I might as well just draw it flat as in my use case it would be perfectly fine.&lt;/p&gt;

&lt;p&gt;The previous method was not what I wanted exactly, as I end up with 2 flat surfaces, well my next method was to draw a circle and cut it in half, let this rotate over an axis that such far away it is equal to the inner radius I want ~4.5cm. So I start of drawing a circle in the origin…. This was a bad plan. Somehow I could not move it, well because fusion fixes/constraints it to the origin. After some googling I found this out, and it was suggested to remove this constraint, however trying to do this didn’t help. I gave up and just drew another circle but not taking the origin at the center of the circle. I ended up with something that looked quite decent.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/shikon/cloudimg/master/typora/OppIvZA.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Oh I also added some fillets, what are those? Well those nice roundings, at the left and right corner. Ah remember what I said about not being able to print flying things? Yeah maybe the overhang angle is a bit too aggressive. Also maybe I want it to be a bit thicker, lets add a square to the bottom. Here we go.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/shikon/cloudimg/master/typora/9WNW648.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now we move it away from the origin ~4.5 cm and revolve and we end up with something that is looking promising.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/shikon/cloudimg/master/typora/vdM7ENO.jpeg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;what-now&quot;&gt;What now?&lt;/h1&gt;

&lt;p&gt;Well I exported the file as a STL, next I will set the Cura profile and slice it and test both “O-ring” designs. The one with fillets and one with a square. Also I designed the width of the O-ring to be 5 mm, from the CAD program it seems to be a bit too wide. I just randomly chose this as it seemed to be quite okay. But I might redesign it for 4 mm, or smaller. As I am a real fusion360 noob, I do not know how to make it parametric. That means I tell the program, that the things I draw can be varied, and just changing this number somewhere in the program which I do not know yet. I can easily adjust various dimensions of the object. Some important parameters here would be: inner diameter, width and height. That is the next thing to learn.&lt;/p&gt;

&lt;h1 id=&quot;ps&quot;&gt;PS&lt;/h1&gt;

&lt;p&gt;Oh since probably nobody reads this blog yet, I am not going to bother yet/I do not know how I am going to implement this. But these files can be made available, for now just shoot me a mail!&lt;/p&gt;</content><author><name>Lan Hu</name></author><category term="3D-printing" /><category term="first time" /><category term="fusion360" /><category term="CAD tool" /><summary type="html">Practicalities… While waiting for my Sainsmart 3D TPU filament to arrive, I still needed some other parts before I could start the printing. That is a CAD drawing of such O-ring. I thought I would finish this in a couple of minutes, I mean how hard could it be? I simply draw a ring and that’s it. Always, in practice or in reality if you want, it does not come easy. At least if you are unexperienced, things you know how to, well… you know how to. Therefore they are easy :). O-ring or square-ring? First I started with two circles, and then you would extrude it up a little to get a 3D part. Circles are 2D as they “live” in a plane. If you could pull it up well then you would end up with a sort of squished cylinder and it becomes 3D! Something like below. But then I realized in my situation I would prefer not to have 2 “flat” sides. Which ends up to be more of a square ring. To mimic a real O-ring both sides would’ve have been well round and like a circle, but this is unpractical for a 3D-printer. Since it prints on a flat surface, one side eventually ends up flat. Therefore, it would be stupid to draw it round. Well you could try, but that would mean the following printed layers have to “fly”. This is called overhang and while it allows for some I might as well just draw it flat as in my use case it would be perfectly fine. The previous method was not what I wanted exactly, as I end up with 2 flat surfaces, well my next method was to draw a circle and cut it in half, let this rotate over an axis that such far away it is equal to the inner radius I want ~4.5cm. So I start of drawing a circle in the origin…. This was a bad plan. Somehow I could not move it, well because fusion fixes/constraints it to the origin. After some googling I found this out, and it was suggested to remove this constraint, however trying to do this didn’t help. I gave up and just drew another circle but not taking the origin at the center of the circle. I ended up with something that looked quite decent. Oh I also added some fillets, what are those? Well those nice roundings, at the left and right corner. Ah remember what I said about not being able to print flying things? Yeah maybe the overhang angle is a bit too aggressive. Also maybe I want it to be a bit thicker, lets add a square to the bottom. Here we go. Now we move it away from the origin ~4.5 cm and revolve and we end up with something that is looking promising. What now? Well I exported the file as a STL, next I will set the Cura profile and slice it and test both “O-ring” designs. The one with fillets and one with a square. Also I designed the width of the O-ring to be 5 mm, from the CAD program it seems to be a bit too wide. I just randomly chose this as it seemed to be quite okay. But I might redesign it for 4 mm, or smaller. As I am a real fusion360 noob, I do not know how to make it parametric. That means I tell the program, that the things I draw can be varied, and just changing this number somewhere in the program which I do not know yet. I can easily adjust various dimensions of the object. Some important parameters here would be: inner diameter, width and height. That is the next thing to learn. PS Oh since probably nobody reads this blog yet, I am not going to bother yet/I do not know how I am going to implement this. But these files can be made available, for now just shoot me a mail!</summary></entry><entry><title type="html">Printing O-rings for dad</title><link href="https://shiko.nl/3d-printing/printing-orings/" rel="alternate" type="text/html" title="Printing O-rings for dad" /><published>2020-12-27T00:00:00+01:00</published><updated>2020-12-27T00:00:00+01:00</updated><id>https://shiko.nl/3d-printing/printing-orings</id><content type="html" xml:base="https://shiko.nl/3d-printing/printing-orings/">&lt;h1 id=&quot;backstory&quot;&gt;Backstory&lt;/h1&gt;

&lt;p&gt;Today dad asked me if I could buy an O-ring as he needed one. The situation is as follows, the water drainage has a cup (diameter 9 cm) which seals the sewer air from the environment. It broke so it started to smell, and we all know the sewers are nasty…&lt;/p&gt;

&lt;p&gt;A couple months ago I bought myself a Creality ender 5 3D-printer. Mainly to support my maker hobbies, but maybe covid-19 accelerated this quite expensive purchase. I recently had some severe stringing issues using the stock hot end, therefore I upgraded to a direct-drive setup. Due to lower retraction settings, the stringing issues were solved. One of the main advantages of this upgrade is being able to print flexible filaments. Although, not my main reason, this was the perfect excuse for myself to buy some flexible filament. Since my dad wanted to replace 2 and have a few backup, I suggested to print them using my 3D-printer.  Googling a O-ring of 9 cm diameter, the costs were about ~€2,50- a piece, requiring 6 of them totaled ~ €20,- including shipping. I realized it should be easy to print an O-ring for much less. It was time for some more in-depth research.&lt;/p&gt;

&lt;h1 id=&quot;the-internet-theory&quot;&gt;The internet (theory)&lt;/h1&gt;

&lt;p&gt;I am a huge fan of the internet, you type in a few keywords in google and you get loads of information.&lt;/p&gt;

&lt;p&gt;So the search started with googling &lt;em&gt;TPU filament&lt;/em&gt;, and the first hit was a post from www.all3dp.com, which I quite like. Their posts are quite neat, comprehensive and a overall good read. I read a small part about TPE’s which TPU is a subclass of TPE. Due to the huge popularity and success of TPU, TPE faded into the background, hence I didn’t concern me over these materials anymore.  Now I needed to check a few things whether it was possible to print it with my machine. Mainly I was concerned about the printing temperatures and adhesion. I needed the following requirements,&lt;/p&gt;

&lt;h2 id=&quot;requirements&quot;&gt;Requirements&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Nozzle temperature: &amp;lt;285 °C (limited by hot end)&lt;/li&gt;
  &lt;li&gt;Warping: Minimal&lt;/li&gt;
  &lt;li&gt;Shrinkage: Minimal&lt;/li&gt;
  &lt;li&gt;Flexibility: Very high&lt;/li&gt;
  &lt;li&gt;Cura profile&lt;/li&gt;
  &lt;li&gt;Amazon available&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In order to have a successful print the material should show low warping and shrinkage, this makes it easier and more fault-tolerant. Flexibility speaks for itself here… And to accelerate the time for product a pre-configured Cura profile by the manufacturer or other makers is highly preferred. Lastly, if possible I should be able to buy it from Amazon, as the shipping with prime is free and saves me money.&lt;/p&gt;

&lt;h2 id=&quot;tpu-brands&quot;&gt;TPU brands&lt;/h2&gt;

&lt;p&gt;One of the things I have learnt the hard way is to never go for the cheapest filament. I would not say the cheaper filaments are bad, but you pay in your time of setting it up and calibrating it. Hence my preference for an available print profile.&lt;/p&gt;

&lt;p&gt;The article discussed the following series of TPU’s,&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;MatterHackers Pro&lt;/li&gt;
  &lt;li&gt;NinjaTek NinjaFlex&lt;/li&gt;
  &lt;li&gt;NinjaTek Cheetah&lt;/li&gt;
  &lt;li&gt;NinjaTek Armadillo&lt;/li&gt;
  &lt;li&gt;Fillamentum Flexfill&lt;/li&gt;
  &lt;li&gt;PolyFlex&lt;/li&gt;
  &lt;li&gt;SainSmart&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All with varying properties, the main important parameter for me here was the hardness. All of them were such that they are decent flexible filaments, this can be seen by the &lt;strong&gt;elongation at break&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/shikon/cloudimg/master/typora/varioshore.jpg&quot; alt=&quot;varioshore&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Another interesting filament was &lt;strong&gt;colorFabb’s varioshore&lt;/strong&gt;. By changing the print settings one could tune the flexibility of this material. Its principle of working is, there is an additive in the filament which expands as a gas and introduces bubbles into the material. High school chemistry tells that the hotter one warms up a substance the larger its volume. Using the Ideal gas law, 
\(\mathrm{PV}=n\mathrm{RT}\)
with P the pressure, V the volume, n the amount of substance, R the gas constant and T the temperature. These pore (gas bubbles) sizes determine then the flexibility of the final print.&lt;/p&gt;

&lt;p&gt;Although very interesting it brings in many parameters to be tuned and would only complicate the design of this simple element. And therefore require more time. It is not too expensive for  ~€50,- a 800g spool.&lt;/p&gt;

&lt;h2 id=&quot;amazon&quot;&gt;Amazon&lt;/h2&gt;

&lt;p&gt;Well looking at amazon.de, I didn’t get much to choose from. A quick search only gave a few smaller brands and &lt;em&gt;SainSmart&lt;/em&gt; all3dp was quite positive of this filament. Looking up this filament I found that they had a Ender 3 Cura profile, considering the similarity between Ender 3 and 5 I knew I could take this profile and just use it with little tweaking and I was SOLD. It was cheap too and orange :).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/shikon/cloudimg/master/typora/firefox_WbcL291AXV.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;what-now&quot;&gt;What now?&lt;/h1&gt;

&lt;p&gt;Well I will design a very simple ring in Autodesk Fusion360 and hopefully swapping out the filament will be easy. I might wait for my backup nozzles and separate my nozzles to  their material type. So nozzles X only for PLA, nozzle Y for PETG and nozzle Z for TPU. To be continued….&lt;/p&gt;

&lt;h1 id=&quot;resources&quot;&gt;Resources&lt;/h1&gt;</content><author><name>Lan Hu</name></author><category term="3D-printing" /><category term="first time" /><category term="standard" /><summary type="html">Backstory Today dad asked me if I could buy an O-ring as he needed one. The situation is as follows, the water drainage has a cup (diameter 9 cm) which seals the sewer air from the environment. It broke so it started to smell, and we all know the sewers are nasty… A couple months ago I bought myself a Creality ender 5 3D-printer. Mainly to support my maker hobbies, but maybe covid-19 accelerated this quite expensive purchase. I recently had some severe stringing issues using the stock hot end, therefore I upgraded to a direct-drive setup. Due to lower retraction settings, the stringing issues were solved. One of the main advantages of this upgrade is being able to print flexible filaments. Although, not my main reason, this was the perfect excuse for myself to buy some flexible filament. Since my dad wanted to replace 2 and have a few backup, I suggested to print them using my 3D-printer. Googling a O-ring of 9 cm diameter, the costs were about ~€2,50- a piece, requiring 6 of them totaled ~ €20,- including shipping. I realized it should be easy to print an O-ring for much less. It was time for some more in-depth research. The internet (theory) I am a huge fan of the internet, you type in a few keywords in google and you get loads of information. So the search started with googling TPU filament, and the first hit was a post from www.all3dp.com, which I quite like. Their posts are quite neat, comprehensive and a overall good read. I read a small part about TPE’s which TPU is a subclass of TPE. Due to the huge popularity and success of TPU, TPE faded into the background, hence I didn’t concern me over these materials anymore. Now I needed to check a few things whether it was possible to print it with my machine. Mainly I was concerned about the printing temperatures and adhesion. I needed the following requirements, Requirements Nozzle temperature: &amp;lt;285 °C (limited by hot end) Warping: Minimal Shrinkage: Minimal Flexibility: Very high Cura profile Amazon available In order to have a successful print the material should show low warping and shrinkage, this makes it easier and more fault-tolerant. Flexibility speaks for itself here… And to accelerate the time for product a pre-configured Cura profile by the manufacturer or other makers is highly preferred. Lastly, if possible I should be able to buy it from Amazon, as the shipping with prime is free and saves me money. TPU brands One of the things I have learnt the hard way is to never go for the cheapest filament. I would not say the cheaper filaments are bad, but you pay in your time of setting it up and calibrating it. Hence my preference for an available print profile. The article discussed the following series of TPU’s, MatterHackers Pro NinjaTek NinjaFlex NinjaTek Cheetah NinjaTek Armadillo Fillamentum Flexfill PolyFlex SainSmart All with varying properties, the main important parameter for me here was the hardness. All of them were such that they are decent flexible filaments, this can be seen by the elongation at break. Another interesting filament was colorFabb’s varioshore. By changing the print settings one could tune the flexibility of this material. Its principle of working is, there is an additive in the filament which expands as a gas and introduces bubbles into the material. High school chemistry tells that the hotter one warms up a substance the larger its volume. Using the Ideal gas law, \(\mathrm{PV}=n\mathrm{RT}\) with P the pressure, V the volume, n the amount of substance, R the gas constant and T the temperature. These pore (gas bubbles) sizes determine then the flexibility of the final print. Although very interesting it brings in many parameters to be tuned and would only complicate the design of this simple element. And therefore require more time. It is not too expensive for ~€50,- a 800g spool. Amazon Well looking at amazon.de, I didn’t get much to choose from. A quick search only gave a few smaller brands and SainSmart all3dp was quite positive of this filament. Looking up this filament I found that they had a Ender 3 Cura profile, considering the similarity between Ender 3 and 5 I knew I could take this profile and just use it with little tweaking and I was SOLD. It was cheap too and orange :). What now? Well I will design a very simple ring in Autodesk Fusion360 and hopefully swapping out the filament will be easy. I might wait for my backup nozzles and separate my nozzles to their material type. So nozzles X only for PLA, nozzle Y for PETG and nozzle Z for TPU. To be continued…. Resources</summary></entry><entry><title type="html">Hello world!</title><link href="https://shiko.nl/electronics/hello-world/" rel="alternate" type="text/html" title="Hello world!" /><published>2020-12-27T00:00:00+01:00</published><updated>2020-12-27T00:00:00+01:00</updated><id>https://shiko.nl/electronics/hello-world</id><content type="html" xml:base="https://shiko.nl/electronics/hello-world/">&lt;p&gt;The quick brown fox jumped over  the lazy dog…
This is my first test post.&lt;/p&gt;</content><author><name>Lan Hu</name></author><category term="electronics" /><summary type="html">The quick brown fox jumped over the lazy dog… This is my first test post.</summary></entry></feed>